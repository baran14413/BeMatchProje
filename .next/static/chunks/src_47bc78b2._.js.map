{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/ip-management-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview Genkit flows for managing IP blocking.\n *\n * - blockIp - Adds an IP address to the blocklist.\n * - unblockIp - Removes an IP address from the blocklist.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport { getFirestore, serverTimestamp, doc, setDoc, deleteDoc } from 'firebase-admin/firestore';\nimport { initializeApp, getApps } from 'firebase-admin/app';\n\n// Input schema for blocking an IP\nconst BlockIpInputSchema = z.object({\n  ipAddress: z.string().ip().describe('The IP address to block.'),\n  reason: z.string().optional().describe('The reason for blocking the IP.'),\n});\nexport type BlockIpInput = z.infer<typeof BlockIpInputSchema>;\n\n// Input schema for unblocking an IP\nconst UnblockIpInputSchema = z.object({\n  ipAddress: z.string().ip().describe('The IP address to unblock.'),\n});\nexport type UnblockIpInput = z.infer<typeof UnblockIpInputSchema>;\n\n// Generic output schema\nconst ManagementOutputSchema = z.object({\n  success: z.boolean(),\n  error: z.string().optional(),\n});\nexport type ManagementOutput = z.infer<typeof ManagementOutputSchema>;\n\n// Exported function to block an IP\nexport async function blockIp(input: BlockIpInput): Promise<ManagementOutput> {\n    return blockIpFlow(input);\n}\n\n// Exported function to unblock an IP\nexport async function unblockIp(input: UnblockIpInput): Promise<ManagementOutput> {\n    return unblockIpFlow(input);\n}\n\n\nconst blockIpFlow = ai.defineFlow(\n  {\n    name: 'blockIpFlow',\n    inputSchema: BlockIpInputSchema,\n    outputSchema: ManagementOutputSchema,\n  },\n  async ({ ipAddress, reason }) => {\n    if (!getApps().length) {\n        initializeApp();\n    }\n    const db = getFirestore();\n\n    try {\n        const blockRef = doc(db, 'blocked-ips', ipAddress);\n        await setDoc(blockRef, {\n            reason: reason || 'Neden belirtilmedi',\n            blockedAt: serverTimestamp(),\n        });\n        return { success: true };\n    } catch (error: any) {\n        console.error(`Failed to block IP ${ipAddress}:`, error);\n        return { success: false, error: `IP engellenemedi: ${error.message}` };\n    }\n  }\n);\n\n\nconst unblockIpFlow = ai.defineFlow(\n  {\n    name: 'unblockIpFlow',\n    inputSchema: UnblockIpInputSchema,\n    outputSchema: ManagementOutputSchema,\n  },\n  async ({ ipAddress }) => {\n    if (!getApps().length) {\n        initializeApp();\n    }\n    const db = getFirestore();\n\n    try {\n        const blockRef = doc(db, 'blocked-ips', ipAddress);\n        await deleteDoc(blockRef);\n        return { success: true };\n    } catch (error: any) {\n        console.error(`Failed to unblock IP ${ipAddress}:`, error);\n        return { success: false, error: `IP engeli kaldırılamadı: ${error.message}` };\n    }\n  }\n);\n"],"names":[],"mappings":";;;;;;IAwCsB,YAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/admin/blocked-ips/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Loader2, Ban, ShieldCheck } from 'lucide-react';\nimport { db } from '@/lib/firebase';\nimport { collection, getDocs, query, orderBy, DocumentData, Timestamp } from 'firebase/firestore';\nimport { useToast } from '@/hooks/use-toast';\nimport { format } from 'date-fns';\nimport { tr } from 'date-fns/locale';\nimport { unblockIp } from '@/ai/flows/ip-management-flow';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { cn } from '@/lib/utils';\nimport { buttonVariants } from '@/components/ui/button';\n\ntype BlockedIp = {\n  ip: string;\n  reason: string;\n  blockedAt: Date | null;\n};\n\nexport default function BlockedIpsPage() {\n    const [blockedIps, setBlockedIps] = useState<BlockedIp[]>([]);\n    const [loading, setLoading] = useState(true);\n    const { toast } = useToast();\n\n    useEffect(() => {\n        const fetchBlockedIps = async () => {\n            setLoading(true);\n            try {\n                const ipsQuery = query(collection(db, 'blocked-ips'), orderBy('blockedAt', 'desc'));\n                const ipsSnapshot = await getDocs(ipsQuery);\n                const ipsList = ipsSnapshot.docs.map(doc => {\n                    const data = doc.data();\n                    return {\n                        ip: doc.id,\n                        reason: data.reason,\n                        blockedAt: (data.blockedAt as Timestamp)?.toDate() || null,\n                    };\n                });\n                setBlockedIps(ipsList);\n            } catch (error) {\n                console.error(\"Error fetching blocked IPs:\", error);\n                toast({ variant: 'destructive', title: \"Engellenen IP'ler alınamadı.\" });\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchBlockedIps();\n    }, [toast]);\n\n    const handleUnblock = async (ipAddress: string) => {\n        try {\n            const result = await unblockIp({ ipAddress });\n            if (result.success) {\n                toast({ title: `${ipAddress} adresinin engeli kaldırıldı.` });\n                setBlockedIps(prev => prev.filter(ip => ip.ip !== ipAddress));\n            } else {\n                throw new Error(result.error || 'Bilinmeyen bir hata.');\n            }\n        } catch (error: any) {\n            toast({ variant: 'destructive', title: 'Engel Kaldırılamadı', description: error.message });\n        }\n    };\n\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle>Engellenen IP Adresleri</CardTitle>\n                <CardDescription>\n                    Uygulamaya erişimi engellenen IP adreslerini yönetin.\n                </CardDescription>\n            </CardHeader>\n            <CardContent>\n                {loading ? (\n                    <div className=\"flex justify-center items-center p-10\">\n                        <Loader2 className=\"w-8 h-8 animate-spin\" />\n                    </div>\n                ) : (\n                    <Table>\n                        <TableHeader>\n                            <TableRow>\n                                <TableHead>IP Adresi</TableHead>\n                                <TableHead>Engellenme Nedeni</TableHead>\n                                <TableHead>Engellenme Tarihi</TableHead>\n                                <TableHead className=\"text-right\">Eylemler</TableHead>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {blockedIps.length > 0 ? blockedIps.map(blocked => (\n                                <TableRow key={blocked.ip}>\n                                    <TableCell className=\"font-mono\">{blocked.ip}</TableCell>\n                                    <TableCell>{blocked.reason}</TableCell>\n                                    <TableCell>\n                                        {blocked.blockedAt ? format(blocked.blockedAt, \"dd MMMM yyyy, HH:mm\", { locale: tr }) : 'Bilinmiyor'}\n                                    </TableCell>\n                                    <TableCell className=\"text-right\">\n                                        <AlertDialog>\n                                            <AlertDialogTrigger asChild>\n                                                 <Button variant=\"outline\" size=\"sm\">\n                                                    <ShieldCheck className=\"mr-2 h-4 w-4 text-green-600\"/>\n                                                    Engeli Kaldır\n                                                </Button>\n                                            </AlertDialogTrigger>\n                                            <AlertDialogContent>\n                                                <AlertDialogHeader>\n                                                    <AlertDialogTitle>Emin misiniz?</AlertDialogTitle>\n                                                    <AlertDialogDescription>\n                                                        <b>{blocked.ip}</b> adresinin engelini kaldırmak istediğinizden emin misiniz? Bu IP adresi tekrar uygulamaya erişebilecektir.\n                                                    </AlertDialogDescription>\n                                                </AlertDialogHeader>\n                                                <AlertDialogFooter>\n                                                    <AlertDialogCancel>İptal</AlertDialogCancel>\n                                                    <AlertDialogAction \n                                                        onClick={() => handleUnblock(blocked.ip)} \n                                                        className={cn(buttonVariants({ variant: \"default\" }))}>\n                                                        Evet, Engeli Kaldır\n                                                    </AlertDialogAction>\n                                                </AlertDialogFooter>\n                                            </AlertDialogContent>\n                                        </AlertDialog>\n                                    </TableCell>\n                                </TableRow>\n                            )) : (\n                                <TableRow>\n                                    <TableCell colSpan={4} className=\"text-center text-muted-foreground h-24\">\n                                        Hiç engellenmiş IP adresi bulunamadı.\n                                    </TableCell>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                )}\n            </CardContent>\n        </Card>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}