{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":";;;;;;;;;AAGA;AACA;AAAA;AAAA;AAEA;;;AALA;;;;AAOA,uCAAuC;AACvC,MAAM,SAAS;IAAE,OAAO;IAAI,MAAM;AAAQ;AAgB1C,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EAA4B;AAEnE,SAAS;;IACP,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IAEjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;GARS;AAUT,MAAM,+BAAiB,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,WAQpC,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,OAAO,EAAE;;IAChD,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,QAAW,AAAD;IAC3B,MAAM,UAAU,CAAC,MAAM,EAAE,MAAM,SAAS,OAAO,CAAC,MAAM,KAAK;IAE3D,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;QAAO;kBACrC,cAAA,6LAAC;YACC,cAAY;YACZ,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ypBACA;YAED,GAAG,KAAK;;8BAET,6LAAC;oBAAW,IAAI;oBAAS,QAAQ;;;;;;8BACjC,6LAAC,sKAAA,CAAA,sBAAqC;8BACnC;;;;;;;;;;;;;;;;;AAKX;;AACA,eAAe,WAAW,GAAG;AAE7B,MAAM,aAAa,CAAC,EAAE,EAAE,EAAE,MAAM,EAAuC;IACrE,MAAM,cAAc,OAAO,OAAO,CAAC,QAAQ,MAAM,CAC/C,CAAC,GAAG,OAAO,GAAK,OAAO,KAAK,IAAI,OAAO,KAAK;IAG9C,IAAI,CAAC,YAAY,MAAM,EAAE;QACvB,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,yBAAyB;YACvB,QAAQ,OAAO,OAAO,CAAC,QACpB,GAAG,CACF,CAAC,CAAC,OAAO,OAAO,GAAK,CAAC;AAClC,EAAE,OAAO,aAAa,EAAE,GAAG;AAC3B,EAAE,YACC,GAAG,CAAC,CAAC,CAAC,KAAK,WAAW;oBACrB,MAAM,QACJ,WAAW,KAAK,EAAE,CAAC,MAAuC,IAC1D,WAAW,KAAK;oBAClB,OAAO,QAAQ,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG;gBACjD,GACC,IAAI,CAAC,MAAM;;AAEd,CAAC,EAEU,IAAI,CAAC;QACV;;;;;;AAGN;MA/BM;AAiCN,MAAM,eAAe,0JAAA,CAAA,UAAyB;AAE9C,MAAM,oCAAsB,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAWzC,CACE,EACE,MAAM,EACN,OAAO,EACP,SAAS,EACT,YAAY,KAAK,EACjB,YAAY,KAAK,EACjB,gBAAgB,KAAK,EACrB,KAAK,EACL,cAAc,EACd,cAAc,EACd,SAAS,EACT,KAAK,EACL,OAAO,EACP,QAAQ,EACT,EACD;;IAEA,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,UAAa,AAAD;qDAAE;YACjC,IAAI,aAAa,CAAC,SAAS,QAAQ;gBACjC,OAAO;YACT;YAEA,MAAM,CAAC,KAAK,GAAG;YACf,MAAM,MAAM,GAAG,YAAY,KAAK,OAAO,IAAI,KAAK,IAAI,IAAI,SAAS;YACjE,MAAM,aAAa,4BAA4B,QAAQ,MAAM;YAC7D,MAAM,QACJ,CAAC,YAAY,OAAO,UAAU,WAC1B,MAAM,CAAC,MAA6B,EAAE,SAAS,QAC/C,YAAY;YAElB,IAAI,gBAAgB;gBAClB,qBACE,6LAAC;oBAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;8BAC/B,eAAe,OAAO;;;;;;YAG7B;YAEA,IAAI,CAAC,OAAO;gBACV,OAAO;YACT;YAEA,qBAAO,6LAAC;gBAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;0BAAkB;;;;;;QAC7D;oDAAG;QACD;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,IAAI,CAAC,UAAU,CAAC,SAAS,QAAQ;QAC/B,OAAO;IACT;IAEA,MAAM,YAAY,QAAQ,MAAM,KAAK,KAAK,cAAc;IAExD,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0HACA;;YAGD,CAAC,YAAY,eAAe;0BAC7B,6LAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,MAAM;oBAClB,MAAM,MAAM,GAAG,WAAW,KAAK,IAAI,IAAI,KAAK,OAAO,IAAI,SAAS;oBAChE,MAAM,aAAa,4BAA4B,QAAQ,MAAM;oBAC7D,MAAM,iBAAiB,SAAS,KAAK,OAAO,CAAC,IAAI,IAAI,KAAK,KAAK;oBAE/D,qBACE,6LAAC;wBAEC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA,cAAc,SAAS;kCAGxB,aAAa,MAAM,UAAU,aAAa,KAAK,IAAI,GAClD,UAAU,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,MAAM,OAAO,KAAK,OAAO,kBAE1D;;gCACG,YAAY,qBACX,6LAAC,WAAW,IAAI;;;;2CAEhB,CAAC,+BACC,6LAAC;oCACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;wCACE,eAAe,cAAc;wCAC7B,OAAO,cAAc;wCACrB,mDACE,cAAc;wCAChB,UAAU,aAAa,cAAc;oCACvC;oCAEF,OACE;wCACE,cAAc;wCACd,kBAAkB;oCACpB;;;;;;8CAKR,6LAAC;oCACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4CACA,YAAY,cAAc;;sDAG5B,6LAAC;4CAAI,WAAU;;gDACZ,YAAY,eAAe;8DAC5B,6LAAC;oDAAK,WAAU;8DACb,YAAY,SAAS,KAAK,IAAI;;;;;;;;;;;;wCAGlC,KAAK,KAAK,kBACT,6LAAC;4CAAK,WAAU;sDACb,KAAK,KAAK,CAAC,cAAc;;;;;;;;;;;;;;uBAhD/B,KAAK,OAAO;;;;;gBAwDvB;;;;;;;;;;;;AAIR;;QAzHqB;;;;QAAA;;;;AA2HvB,oBAAoB,WAAW,GAAG;AAElC,MAAM,cAAc,yJAAA,CAAA,SAAwB;AAE5C,MAAM,mCAAqB,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAQxC,CACE,EAAE,SAAS,EAAE,WAAW,KAAK,EAAE,OAAO,EAAE,gBAAgB,QAAQ,EAAE,OAAO,EAAE,EAC3E;;IAEA,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,IAAI,CAAC,SAAS,QAAQ;QACpB,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0CACA,kBAAkB,QAAQ,SAAS,QACnC;kBAGD,QAAQ,GAAG,CAAC,CAAC;YACZ,MAAM,MAAM,GAAG,WAAW,KAAK,OAAO,IAAI,SAAS;YACnD,MAAM,aAAa,4BAA4B,QAAQ,MAAM;YAE7D,qBACE,6LAAC;gBAEC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;oBAGD,YAAY,QAAQ,CAAC,yBACpB,6LAAC,WAAW,IAAI;;;;6CAEhB,6LAAC;wBACC,WAAU;wBACV,OAAO;4BACL,iBAAiB,KAAK,KAAK;wBAC7B;;;;;;oBAGH,YAAY;;eAfR,KAAK,KAAK;;;;;QAkBrB;;;;;;AAGN;;QA1CqB;;;;QAAA;;;;AA4CvB,mBAAmB,WAAW,GAAG;AAEjC,gDAAgD;AAChD,SAAS,4BACP,MAAmB,EACnB,OAAgB,EAChB,GAAW;IAEX,IAAI,OAAO,YAAY,YAAY,YAAY,MAAM;QACnD,OAAO;IACT;IAEA,MAAM,iBACJ,aAAa,WACb,OAAO,QAAQ,OAAO,KAAK,YAC3B,QAAQ,OAAO,KAAK,OAChB,QAAQ,OAAO,GACf;IAEN,IAAI,iBAAyB;IAE7B,IACE,OAAO,WACP,OAAO,OAAO,CAAC,IAA4B,KAAK,UAChD;QACA,iBAAiB,OAAO,CAAC,IAA4B;IACvD,OAAO,IACL,kBACA,OAAO,kBACP,OAAO,cAAc,CAAC,IAAmC,KAAK,UAC9D;QACA,iBAAiB,cAAc,CAC7B,IACD;IACH;IAEA,OAAO,kBAAkB,SACrB,MAAM,CAAC,eAAe,GACtB,MAAM,CAAC,IAA2B;AACxC","debugId":null}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/admin/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from \"@/components/ui/card\";\nimport { Users, FileImage, UserPlus, Flag, MoreVertical, LineChart } from \"lucide-react\";\nimport { collection, getCountFromServer, query, orderBy, limit, getDocs, where, DocumentData } from \"firebase/firestore\";\nimport { db } from \"@/lib/firebase\";\nimport { useEffect, useState } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { cn } from \"@/lib/utils\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Link from \"next/link\";\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { tr } from 'date-fns/locale';\nimport Image from \"next/image\";\nimport { buttonVariants } from \"@/components/ui/button\";\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip } from \"recharts\";\nimport { ChartConfig, ChartContainer, ChartTooltipContent } from \"@/components/ui/chart\";\n\n\nconst formatRelativeTime = (date: Date | null) => {\n    if (!date) return '';\n    try {\n        return formatDistanceToNowStrict(date, {\n            addSuffix: true,\n            locale: tr,\n        });\n    } catch (e) {\n        return 'az önce';\n    }\n};\n\nconst chartData = [\n  { month: \"Ocak\", desktop: 186 },\n  { month: \"Şubat\", desktop: 305 },\n  { month: \"Mart\", desktop: 237 },\n  { month: \"Nisan\", desktop: 73 },\n  { month: \"Mayıs\", desktop: 209 },\n  { month: \"Haziran\", desktop: 214 },\n  { month: \"Temmuz\", desktop: 280 },\n  { month: \"Ağustos\", desktop: 190 },\n  { month: \"Eylül\", desktop: 320 },\n  { month: \"Ekim\", desktop: 250 },\n  { month: \"Kasım\", desktop: 380 },\n  { month: \"Aralık\", desktop: 290 },\n];\n\nconst chartConfig = {\n  desktop: {\n    label: \"Kullanıcı\",\n    color: \"hsl(var(--primary))\",\n  },\n} satisfies ChartConfig;\n\n\nconst StatCard = ({ title, value, icon, iconBgColor }: { title: string, value: string, icon: React.ReactNode, iconBgColor: string }) => (\n    <Card>\n        <CardHeader>\n            <CardTitle className=\"text-sm font-medium text-muted-foreground\">{title}</CardTitle>\n        </CardHeader>\n        <CardContent className=\"flex items-center justify-between\">\n            <div className=\"text-4xl font-bold\">{value}</div>\n            <div className={cn(\"flex h-12 w-12 items-center justify-center rounded-full\", iconBgColor)}>\n                {icon}\n            </div>\n        </CardContent>\n    </Card>\n);\n\nexport default function AdminDashboardPage() {\n    const [stats, setStats] = useState({ userCount: 0, postCount: 0, newUsers: 0, reportedPosts: 0 });\n    const [recentUsers, setRecentUsers] = useState<DocumentData[]>([]);\n    const [recentPosts, setRecentPosts] = useState<DocumentData[]>([]);\n    const [loading, setLoading] = useState(true);\n    const { toast } = useToast();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true);\n            try {\n                // Fetch stats\n                const usersCollection = collection(db, \"users\");\n                const postsCollection = collection(db, \"posts\");\n                \n                const userCountSnap = await getCountFromServer(usersCollection);\n                const postCountSnap = await getCountFromServer(postsCollection);\n                \n                setStats({ \n                    userCount: userCountSnap.data().count, \n                    postCount: postCountSnap.data().count,\n                    newUsers: 215, // Mock\n                    reportedPosts: 45, // Mock\n                });\n\n                // Fetch recent users\n                const recentUsersQuery = query(usersCollection, orderBy(\"createdAt\", \"desc\"), limit(5));\n                const recentUsersSnapshot = await getDocs(recentUsersQuery);\n                setRecentUsers(recentUsersSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n                \n                // Fetch recent posts\n                const recentPostsQuery = query(postsCollection, orderBy(\"createdAt\", \"desc\"), limit(5));\n                const postsSnapshot = await getDocs(recentPostsQuery);\n\n                const authorIds = [...new Set(postsSnapshot.docs.map(p => p.data().authorId).filter(id => !!id))];\n                const authorsData: Record<string, DocumentData> = {};\n                \n                if(authorIds.length > 0) {\n                    const authorsQuery = query(collection(db, 'users'), where('uid', 'in', authorIds));\n                    const authorsSnapshot = await getDocs(authorsQuery);\n                    authorsSnapshot.forEach(doc => {\n                        authorsData[doc.id] = { ...doc.data(), uid: doc.id };\n                    });\n                }\n                \n                const postsWithUsers = postsSnapshot.docs.map(postDoc => {\n                    const postData = postDoc.data();\n                    const author = authorsData[postData.authorId];\n                    return { id: postDoc.id, ...postData, user: author || { name: \"Bilinmiyor\"} };\n                });\n                \n                setRecentPosts(postsWithUsers);\n\n            } catch (error) {\n                console.error(\"Error fetching admin data: \", error);\n                toast({ title: \"Yönetim paneli verileri alınırken hata oluştu.\", variant: \"destructive\" });\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [toast]);\n\n    const getPostPreviewContent = (post: DocumentData) => {\n        if (post.type === 'photo') {\n            return post.caption ? `${post.caption.substring(0, 50)}...` : 'Fotoğraf gönderisi';\n        }\n        return `${post.textContent.substring(0, 50)}...`;\n    }\n    \n    const getPostPreviewTitle = (post: DocumentData) => {\n         if (post.type === 'photo' && post.caption) {\n            return post.caption.split(' ')[0] + ' ' + post.caption.split(' ')[1];\n        }\n         if (post.type === 'photo' && !post.caption) {\n             return \"İsimsiz Gönderi\";\n         }\n        return post.textContent.split(' ').slice(0, 3).join(' ');\n    }\n\n\n    return (\n        <div className=\"space-y-6\">\n             <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n                <StatCard \n                    title=\"Toplam Kullanıcılar\" \n                    value={stats.userCount.toLocaleString()} \n                    icon={<Users className=\"h-6 w-6 text-blue-600\" />} \n                    iconBgColor=\"bg-blue-100 dark:bg-blue-900/20\"\n                />\n                <StatCard \n                    title=\"Toplam Gönderiler\" \n                    value={stats.postCount.toLocaleString()} \n                    icon={<FileImage className=\"h-6 w-6 text-green-600\" />} \n                    iconBgColor=\"bg-green-100 dark:bg-green-900/20\"\n                />\n                 <StatCard \n                    title=\"Yeni Kayıtlar\" \n                    value={stats.newUsers.toLocaleString()} \n                    icon={<UserPlus className=\"h-6 w-6 text-yellow-600\" />} \n                    iconBgColor=\"bg-yellow-100 dark:bg-yellow-900/20\"\n                />\n                 <StatCard \n                    title=\"Rapor Edilenler\" \n                    value={stats.reportedPosts.toLocaleString()}\n                    icon={<Flag className=\"h-6 w-6 text-red-600\" />} \n                    iconBgColor=\"bg-red-100 dark:bg-red-900/20\"\n                />\n            </div>\n            <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-2\">\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Son Kayıt Olan Kullanıcılar</CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                        {loading ? ( <p>Yükleniyor...</p> ) : recentUsers.map(user => (\n                            <div key={user.id} className=\"flex items-center justify-between\">\n                                <Link href={`/profile/${user.username}`} className=\"flex items-center gap-3\">\n                                    <Avatar>\n                                        <AvatarImage src={user.avatarUrl} alt={user.name} />\n                                        <AvatarFallback>{user.name?.charAt(0)}</AvatarFallback>\n                                    </Avatar>\n                                    <div>\n                                        <p className=\"font-semibold\">{user.name}</p>\n                                        <p className=\"text-sm text-muted-foreground\">{user.email}</p>\n                                    </div>\n                                </Link>\n                                <Badge variant={user.isOnline ? \"default\" : \"secondary\"} className={cn(user.isOnline && \"bg-green-500 hover:bg-green-500/90\")}>\n                                    {user.isOnline ? 'Aktif' : 'Pasif'}\n                                </Badge>\n                            </div>\n                        ))}\n                    </CardContent>\n                </Card>\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Son Gönderiler</CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                         {loading ? ( <p>Yükleniyor...</p> ) : recentPosts.map((post, index) => (\n                            <div key={post.id} className=\"flex items-start gap-4\">\n                               <div className={cn(\n                                   \"w-12 h-12 rounded-md flex items-center justify-center text-white font-bold shrink-0\",\n                                   post.type === 'photo' ? 'bg-destructive' : 'bg-green-600'\n                                )}>\n                                   {post.type === 'photo' ? `R${index+1}` : `M${index+1}`}\n                               </div>\n                               <div className=\"flex-1 overflow-hidden\">\n                                   <p className=\"font-semibold leading-tight truncate\">{getPostPreviewTitle(post)}</p>\n                                   <p className=\"text-sm text-muted-foreground mt-1 truncate\">{getPostPreviewContent(post)}</p>\n                                   <p className=\"text-xs text-muted-foreground mt-1\">\n                                        {formatRelativeTime(post.createdAt?.toDate())} - {post.user?.name}\n                                   </p>\n                               </div>\n                                <Link href=\"#\" className={cn(buttonVariants({variant: \"ghost\", size:\"icon\"}), \"h-8 w-8\")}>\n                                    <MoreVertical />\n                                </Link>\n                            </div>\n                        ))}\n                    </CardContent>\n                </Card>\n            </div>\n\n            <Card>\n                <CardHeader>\n                    <CardTitle>Kullanıcı Etkinliği (Son 30 Gün)</CardTitle>\n                </CardHeader>\n                <CardContent>\n                    <ChartContainer config={chartConfig} className=\"w-full h-[250px]\">\n                      <BarChart accessibilityLayer data={chartData}>\n                        <XAxis\n                          dataKey=\"month\"\n                          tickLine={false}\n                          tickMargin={10}\n                          axisLine={false}\n                          tickFormatter={(value) => value.slice(0, 3)}\n                        />\n                        <YAxis tickLine={false} axisLine={false} />\n                        <Tooltip cursor={false} content={<ChartTooltipContent />} />\n                        <Bar dataKey=\"desktop\" fill=\"var(--color-desktop)\" radius={8} />\n                      </BarChart>\n                    </ChartContainer>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}