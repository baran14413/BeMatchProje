{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApps, getApp, deleteApp } from 'firebase/app';\nimport { getAuth, initializeAuth, browserLocalPersistence, browserSessionPersistence, connectAuthEmulator } from 'firebase/auth';\nimport { getFirestore, doc, setDoc, serverTimestamp as firestoreServerTimestamp, enableIndexedDbPersistence, CACHE_SIZE_UNLIMITED, clearIndexedDbPersistence, terminate } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nimport { getDatabase, ref, onValue, set, onDisconnect, serverTimestamp as rtdbServerTimestamp, goOffline, goOnline } from 'firebase/database';\nimport { getMessaging } from 'firebase/messaging';\nimport 'firebase/compat/firestore';\nimport firebase from 'firebase/compat/app';\n\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\n\nif (!getApps().length) {\n    firebase.initializeApp(firebaseConfig);\n}\n\n// Conditionally set persistence based on PWA mode\nconst getFirebaseAuth = () => {\n    if (typeof window !== 'undefined') {\n        const isInStandaloneMode = window.matchMedia('(display-mode: standalone)').matches;\n        const persistence = isInStandaloneMode ? browserSessionPersistence : browserLocalPersistence;\n        \n        try {\n            // Use initializeAuth to ensure we can set persistence.\n            // It's safe to call this multiple times if the config is the same.\n             return initializeAuth(app, { persistence });\n        } catch(e) {\n            // If initializeAuth fails (e.g. already initialized with different persistence),\n            // fall back to getAuth. This can happen during development hot-reloads.\n            return getAuth(app);\n        }\n\n    }\n    // For server-side rendering, return the default auth instance\n    return getAuth(app);\n};\n\nconst auth = getFirebaseAuth();\nconst db = getFirestore(app);\nconst storage = getStorage(app);\nconst rtdb = getDatabase(app);\nconst messaging = (typeof window !== 'undefined' && 'serviceWorker' in navigator) ? getMessaging(app) : null;\n\n\n// Enable offline persistence\nif (typeof window !== 'undefined') {\n    try {\n        enableIndexedDbPersistence(db, {\n            cacheSizeBytes: CACHE_SIZE_UNLIMITED\n        }).catch((err) => {\n            if (err.code == 'failed-precondition') {\n                // Multiple tabs open, persistence can only be enabled\n                // in one tab at a time.\n                console.warn('Firestore persistence failed: multiple tabs open.');\n            } else if (err.code == 'unimplemented') {\n                // The current browser does not support all of the\n                // features required to enable persistence\n                console.warn('Firestore persistence not available in this browser.');\n            }\n        });\n    } catch (error) {\n        console.error(\"Error enabling Firestore persistence:\", error);\n    }\n}\n\nexport const clearCache = async () => {\n    try {\n        // Unregister all service workers first to release file locks\n        if ('serviceWorker' in navigator) {\n            const registrations = await navigator.serviceWorker.getRegistrations();\n            for (const registration of registrations) {\n                await registration.unregister();\n            }\n        }\n        \n        // Terminate Firestore to close DB connections\n        await terminate(db);\n        \n        // Clear Cache Storage\n        const keys = await caches.keys();\n        await Promise.all(keys.map(key => caches.delete(key)));\n        \n        // At this point, IndexedDB should be clearable.\n        // In some complex cases, a full page reload after unregistering might be needed\n        // before IndexedDB can be deleted, but we try it directly first.\n        return new Promise<void>((resolve, reject) => {\n             const deleteRequest = indexedDB.deleteDatabase(\"firebase-firestore-database\");\n             deleteRequest.onsuccess = () => {\n                console.log(\"Firestore IndexedDB cache cleared successfully.\");\n                resolve();\n            };\n            deleteRequest.onerror = (event) => {\n                console.error(\"Error clearing Firestore IndexedDB cache:\", event);\n                reject(new Error(\"Could not clear IndexedDB cache.\"));\n            };\n             deleteRequest.onblocked = () => {\n                console.warn(\"Clearing IndexedDB is blocked. Please close other tabs with this app open.\");\n                reject(new Error(\"Cache clear is blocked. Close other tabs and reload.\"));\n            };\n        });\n\n    } catch (error) {\n        console.error(\"Error during cache clearing process:\", error);\n        throw error;\n    }\n};\n\n\n// Presence management\nconst setupPresence = (userId: string) => {\n    const userStatusDatabaseRef = ref(rtdb, '/status/' + userId);\n    const userFirestoreRef = doc(db, 'users', userId);\n\n    const isOfflineForDatabase = {\n        isOnline: false,\n        lastSeen: rtdbServerTimestamp(),\n    };\n    \n    const isOnlineForDatabase = {\n        isOnline: true,\n    };\n    \n    const isOfflineForFirestore = {\n        isOnline: false,\n        lastSeen: firestoreServerTimestamp(),\n    };\n\n    const isOnlineForFirestore = {\n        isOnline: true,\n    };\n\n    const connectedRef = ref(rtdb, '.info/connected');\n    \n    const listener = onValue(connectedRef, (snap) => {\n        if (snap.val() === false) {\n            // Use setDoc with merge to avoid error if document doesn't exist yet\n            setDoc(userFirestoreRef, isOfflineForFirestore, { merge: true });\n            return;\n        }\n\n        onDisconnect(userStatusDatabaseRef).set(isOfflineForDatabase).then(() => {\n            set(userStatusDatabaseRef, isOnlineForDatabase);\n            // Use setDoc with merge here as well\n            setDoc(userFirestoreRef, isOnlineForFirestore, { merge: true });\n        });\n    });\n\n    const handleVisibilityChange = () => {\n        if (document.visibilityState === 'hidden') {\n            goOffline(rtdb);\n        } else {\n            goOnline(rtdb);\n        }\n    };\n    \n    document.addEventListener('visibilitychange', handleVisibilityChange);\n\n    return () => {\n        document.removeEventListener('visibilitychange', handleVisibilityChange);\n        // Clean up the listener when it's no longer needed\n        // This is a placeholder as onValue returns an unsubscribe function directly\n    };\n};\n\n\nexport { app, auth, db, storage, messaging, setupPresence };\n"],"names":[],"mappings":";;;;;;;;;AAYU;AAXV;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;;;;;;;;;AAGA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,aAAa,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,iCAAiC;IAC1D,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD;AAErE,IAAI,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACnB,iLAAA,CAAA,UAAQ,CAAC,aAAa,CAAC;AAC3B;AAEA,kDAAkD;AAClD,MAAM,kBAAkB;IACpB,wCAAmC;QAC/B,MAAM,qBAAqB,OAAO,UAAU,CAAC,8BAA8B,OAAO;QAClF,MAAM,cAAc,qBAAqB,2PAAA,CAAA,4BAAyB,GAAG,yPAAA,CAAA,0BAAuB;QAE5F,IAAI;YACA,uDAAuD;YACvD,mEAAmE;YAClE,OAAO,CAAA,GAAA,gPAAA,CAAA,iBAAc,AAAD,EAAE,KAAK;gBAAE;YAAY;QAC9C,EAAE,OAAM,GAAG;YACP,iFAAiF;YACjF,wEAAwE;YACxE,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;QACnB;IAEJ;IACA,8DAA8D;IAC9D,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACnB;AAEA,MAAM,OAAO;AACb,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,UAAU,CAAA,GAAA,oKAAA,CAAA,aAAU,AAAD,EAAE;AAC3B,MAAM,OAAO,CAAA,GAAA,qKAAA,CAAA,cAAW,AAAD,EAAE;AACzB,MAAM,YAAY,AAAC,aAAkB,eAAe,mBAAmB,YAAa,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,OAAO;AAGxG,6BAA6B;AAC7B,wCAAmC;IAC/B,IAAI;QACA,CAAA,GAAA,sKAAA,CAAA,6BAA0B,AAAD,EAAE,IAAI;YAC3B,gBAAgB,sKAAA,CAAA,uBAAoB;QACxC,GAAG,KAAK,CAAC,CAAC;YACN,IAAI,IAAI,IAAI,IAAI,uBAAuB;gBACnC,sDAAsD;gBACtD,wBAAwB;gBACxB,QAAQ,IAAI,CAAC;YACjB,OAAO,IAAI,IAAI,IAAI,IAAI,iBAAiB;gBACpC,kDAAkD;gBAClD,0CAA0C;gBAC1C,QAAQ,IAAI,CAAC;YACjB;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,yCAAyC;IAC3D;AACJ;AAEO,MAAM,aAAa;IACtB,IAAI;QACA,6DAA6D;QAC7D,IAAI,mBAAmB,WAAW;YAC9B,MAAM,gBAAgB,MAAM,UAAU,aAAa,CAAC,gBAAgB;YACpE,KAAK,MAAM,gBAAgB,cAAe;gBACtC,MAAM,aAAa,UAAU;YACjC;QACJ;QAEA,8CAA8C;QAC9C,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE;QAEhB,sBAAsB;QACtB,MAAM,OAAO,MAAM,OAAO,IAAI;QAC9B,MAAM,QAAQ,GAAG,CAAC,KAAK,GAAG,CAAC,CAAA,MAAO,OAAO,MAAM,CAAC;QAEhD,gDAAgD;QAChD,gFAAgF;QAChF,iEAAiE;QACjE,OAAO,IAAI,QAAc,CAAC,SAAS;YAC9B,MAAM,gBAAgB,UAAU,cAAc,CAAC;YAC/C,cAAc,SAAS,GAAG;gBACvB,QAAQ,GAAG,CAAC;gBACZ;YACJ;YACA,cAAc,OAAO,GAAG,CAAC;gBACrB,QAAQ,KAAK,CAAC,6CAA6C;gBAC3D,OAAO,IAAI,MAAM;YACrB;YACC,cAAc,SAAS,GAAG;gBACvB,QAAQ,IAAI,CAAC;gBACb,OAAO,IAAI,MAAM;YACrB;QACJ;IAEJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,wCAAwC;QACtD,MAAM;IACV;AACJ;AAGA,sBAAsB;AACtB,MAAM,gBAAgB,CAAC;IACnB,MAAM,wBAAwB,CAAA,GAAA,qKAAA,CAAA,MAAG,AAAD,EAAE,MAAM,aAAa;IACrD,MAAM,mBAAmB,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,SAAS;IAE1C,MAAM,uBAAuB;QACzB,UAAU;QACV,UAAU,CAAA,GAAA,qKAAA,CAAA,kBAAmB,AAAD;IAChC;IAEA,MAAM,sBAAsB;QACxB,UAAU;IACd;IAEA,MAAM,wBAAwB;QAC1B,UAAU;QACV,UAAU,CAAA,GAAA,sKAAA,CAAA,kBAAwB,AAAD;IACrC;IAEA,MAAM,uBAAuB;QACzB,UAAU;IACd;IAEA,MAAM,eAAe,CAAA,GAAA,qKAAA,CAAA,MAAG,AAAD,EAAE,MAAM;IAE/B,MAAM,WAAW,CAAA,GAAA,qKAAA,CAAA,UAAO,AAAD,EAAE,cAAc,CAAC;QACpC,IAAI,KAAK,GAAG,OAAO,OAAO;YACtB,qEAAqE;YACrE,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,kBAAkB,uBAAuB;gBAAE,OAAO;YAAK;YAC9D;QACJ;QAEA,CAAA,GAAA,qKAAA,CAAA,eAAY,AAAD,EAAE,uBAAuB,GAAG,CAAC,sBAAsB,IAAI,CAAC;YAC/D,CAAA,GAAA,qKAAA,CAAA,MAAG,AAAD,EAAE,uBAAuB;YAC3B,qCAAqC;YACrC,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,kBAAkB,sBAAsB;gBAAE,OAAO;YAAK;QACjE;IACJ;IAEA,MAAM,yBAAyB;QAC3B,IAAI,SAAS,eAAe,KAAK,UAAU;YACvC,CAAA,GAAA,qKAAA,CAAA,YAAS,AAAD,EAAE;QACd,OAAO;YACH,CAAA,GAAA,qKAAA,CAAA,WAAQ,AAAD,EAAE;QACb;IACJ;IAEA,SAAS,gBAAgB,CAAC,oBAAoB;IAE9C,OAAO;QACH,SAAS,mBAAmB,CAAC,oBAAoB;IACjD,mDAAmD;IACnD,4EAA4E;IAChF;AACJ","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { onAuthStateChanged, User } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport { Loader2 } from 'lucide-react';\n\nexport default function Home() {\n    const router = useRouter();\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, async (user: User | null) => {\n            // Give a moment for the initial check, then redirect.\n            await new Promise(resolve => setTimeout(resolve, 500));\n            \n            if (user) {\n                // User is logged in, redirect to the main app experience\n                router.replace('/explore');\n            } else {\n                // User is not logged in, redirect to the login page\n                router.replace('/login');\n            }\n        });\n\n        return () => unsubscribe();\n    }, [router]);\n\n    return (\n        <main className=\"flex min-h-screen flex-col items-center justify-center bg-background p-8\">\n            <Loader2 className=\"h-16 w-16 animate-spin text-primary\" />\n        </main>\n    );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAAA;AACA;AACA;;;AANA;;;;;;AAQe,SAAS;;IACpB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACN,MAAM,cAAc,CAAA,GAAA,oPAAA,CAAA,qBAAkB,AAAD,EAAE,yHAAA,CAAA,OAAI;8CAAE,OAAO;oBAChD,sDAAsD;oBACtD,MAAM,IAAI;sDAAQ,CAAA,UAAW,WAAW,SAAS;;oBAEjD,IAAI,MAAM;wBACN,yDAAyD;wBACzD,OAAO,OAAO,CAAC;oBACnB,OAAO;wBACH,oDAAoD;wBACpD,OAAO,OAAO,CAAC;oBACnB;gBACJ;;YAEA;kCAAO,IAAM;;QACjB;yBAAG;QAAC;KAAO;IAEX,qBACI,6LAAC;QAAK,WAAU;kBACZ,cAAA,6LAAC,oNAAA,CAAA,UAAO;YAAC,WAAU;;;;;;;;;;;AAG/B;GAzBwB;;QACL,qIAAA,CAAA,YAAS;;;KADJ","debugId":null}}]
}