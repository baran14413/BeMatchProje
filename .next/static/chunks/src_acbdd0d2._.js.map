{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root> & {\n    viewportRef?: React.Ref<HTMLDivElement>;\n    onScroll?: React.UIEventHandler<HTMLDivElement>;\n  }\n>(({ className, children, viewportRef, onScroll, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport\n      ref={viewportRef}\n      onScroll={onScroll}\n      className=\"h-full w-full rounded-[inherit]\"\n    >\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAMhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBAC3D,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAC3B,KAAK;gBACL,UAAU;gBACV,WAAU;0BAET;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/bot-chat-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview A flow for handling bot responses in random chats without AI.\n *\n * - botChatFlow - Generates a bot response from a predefined list and adds it to the conversation.\n * - BotChatInput - The input type for the botChatFlow function.\n * - BotChatOutput - The return type for the botChatFlow function.\n */\n\nimport { z } from 'zod';\nimport { getFirestore, serverTimestamp, addDoc, collection, doc, getDoc } from 'firebase-admin/firestore';\nimport { initializeApp, getApps } from 'firebase-admin/app';\nimport { botReplies } from '@/config/bot-config';\n\n// This is not a Genkit flow anymore, just a standard server action.\n\nconst BotChatInputSchema = z.object({\n  conversationId: z.string().describe('The ID of the temporary conversation.'),\n});\nexport type BotChatInput = z.infer<typeof BotChatInputSchema>;\n\nconst BotChatOutputSchema = z.object({\n  success: z.boolean(),\n  error: z.string().optional(),\n});\nexport type BotChatOutput = z.infer<typeof BotChatOutputSchema>;\n\n\nexport async function botChatFlow(input: BotChatInput): Promise<BotChatOutput> {\n    const parsedInput = BotChatInputSchema.safeParse(input);\n    if (!parsedInput.success) {\n        return { success: false, error: 'Invalid input.' };\n    }\n    \n    const { conversationId } = parsedInput.data;\n\n    if (!getApps().length) {\n        initializeApp();\n    }\n    const db = getFirestore();\n\n    try {\n        const convoRef = doc(db, 'temporaryConversations', conversationId);\n        const convoSnap = await getDoc(convoRef);\n\n        if (!convoSnap.exists()) {\n            return { success: false, error: 'Conversation not found.' };\n        }\n\n        const conversation = convoSnap.data();\n        // Assuming bot is always user2 in bot matches\n        const botId = conversation?.user2.uid; \n\n        if (!botId || !botId.startsWith('bot_')) {\n            return { success: false, error: 'This is not a bot conversation.' };\n        }\n\n        // Simple logic to select a random reply from the config\n        const reply = botReplies[Math.floor(Math.random() * botReplies.length)];\n\n        // Add bot's message to the subcollection\n        const messagesRef = collection(convoRef, 'messages');\n        await addDoc(messagesRef, {\n            text: reply,\n            senderId: botId,\n            timestamp: serverTimestamp(),\n        });\n        \n        return { success: true };\n    } catch (error: any) {\n        console.error(`Bot chat flow failed for convo ${conversationId}:`, error);\n        return { success: false, error: `Bot response failed: ${error.message}` };\n    }\n}\n"],"names":[],"mappings":";;;;;;IA6BsB,cAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/random-chat/%5Bid%5D/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { SendHorizonal, Heart, Hourglass, Loader2, X, Bot } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { doc, onSnapshot, getDoc, setDoc, serverTimestamp, collection, addDoc, updateDoc, deleteDoc, runTransaction, increment, query, orderBy } from 'firebase/firestore';\nimport { auth, db } from '@/lib/firebase';\nimport { cn } from '@/lib/utils';\nimport { AlertDialog, AlertDialogAction, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from '@/components/ui/alert-dialog';\nimport Link from 'next/link';\nimport { botChatFlow } from '@/ai/flows/bot-chat-flow';\n\n\ntype Message = {\n    id: string;\n    text: string;\n    senderId: string;\n    timestamp: any;\n};\n\ntype TempConversation = {\n    user1: { uid: string; name: string; avatarUrl: string; heartClicked: boolean };\n    user2: { uid: string; name: string; avatarUrl: string; heartClicked: boolean };\n    isBotMatch: boolean;\n    expiresAt: any;\n};\n\nexport default function RandomChatPage() {\n    const params = useParams();\n    const router = useRouter();\n    const { toast } = useToast();\n    const currentUser = auth.currentUser;\n    const conversationId = params.id as string;\n\n    const [conversation, setConversation] = useState<TempConversation | null>(null);\n    const [otherUser, setOtherUser] = useState<{ uid: string; name: string; avatarUrl: string; } | null>(null);\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [messageInput, setMessageInput] = useState('');\n    const [timeLeft, setTimeLeft] = useState<number | null>(null);\n    const [isMatchPermanent, setIsMatchPermanent] = useState(false);\n    const [showMatchModal, setShowMatchModal] = useState(false);\n\n    const messagesEndRef = useRef<HTMLDivElement>(null);\n    const timerIntervalRef = useRef<NodeJS.Timeout | null>(null);\n    \n    const handleNoMatchFound = useCallback(async () => {\n        if (!currentUser) return;\n        toast({\n            title: \"Süre Doldu!\",\n            description: \"Görünüşe göre şu an herkesin eli dolu! Daha sonra tekrar dene, şansını kaybetmedin.\",\n            duration: 5000,\n        });\n\n        // Refund match credit\n        const userDocRef = doc(db, 'users', currentUser.uid);\n        try {\n            await runTransaction(db, async (transaction) => {\n                const userDoc = await transaction.get(userDocRef);\n                if (!userDoc.exists()) return;\n                const userData = userDoc.data();\n                const today = new Date().toISOString().split('T')[0];\n                if (!userData.isPremium && userData.dailyMatch?.date === today && userData.dailyMatch.count > 0) {\n                     transaction.update(userDocRef, { 'dailyMatch.count': increment(-1) });\n                }\n            });\n             toast({\n                title: \"Hakkınız iade edildi!\",\n                description: \"Bir eşleşme hakkın hesabına geri yüklendi.\",\n            });\n        } catch (error) {\n            console.error(\"Failed to refund match credit:\", error);\n        }\n    }, [currentUser, toast]);\n\n\n    // Fetch and listen to the temporary conversation\n    useEffect(() => {\n        if (!currentUser || !conversationId) return;\n\n        const convoRef = doc(db, 'temporaryConversations', conversationId);\n\n        const unsubscribe = onSnapshot(convoRef, async (docSnap) => {\n            if (!docSnap.exists()) {\n                if (!isMatchPermanent) {\n                   handleNoMatchFound();\n                   router.push('/shuffle');\n                }\n                return;\n            }\n\n            const data = docSnap.data() as TempConversation;\n            setConversation(data);\n            \n            const other = data.user1.uid === currentUser.uid ? data.user2 : data.user1;\n            if (otherUser?.uid !== other.uid) {\n                setOtherUser(other);\n            }\n            \n            // Check for permanent match (not possible with bot)\n            if (!data.isBotMatch && data.user1.heartClicked && data.user2.heartClicked && !isMatchPermanent) {\n                setIsMatchPermanent(true);\n                setShowMatchModal(true);\n\n                // Create permanent conversation\n                const permanentConversationId = [data.user1.uid, data.user2.uid].sort().join('-');\n                const permanentConvoRef = doc(db, 'conversations', permanentConversationId);\n                const permConvoSnap = await getDoc(permanentConvoRef);\n                if (!permConvoSnap.exists()) {\n                     await setDoc(permanentConvoRef, {\n                        users: [data.user1.uid, data.user2.uid],\n                        createdAt: serverTimestamp(),\n                        lastMessage: null,\n                    });\n                }\n                \n                // Optional: Delete temporary conversation after a short delay to allow UI to update\n                setTimeout(() => {\n                   deleteDoc(convoRef);\n                }, 5000);\n            }\n\n            // Countdown timer\n            if (data.expiresAt && !isMatchPermanent) {\n                 if (timerIntervalRef.current) clearInterval(timerIntervalRef.current);\n                 timerIntervalRef.current = setInterval(() => {\n                    const now = new Date();\n                    const expiry = data.expiresAt.toDate();\n                    const secondsLeft = Math.round((expiry.getTime() - now.getTime()) / 1000);\n                    if (secondsLeft > 0) {\n                        setTimeLeft(secondsLeft);\n                    } else {\n                        setTimeLeft(0);\n                        if(timerIntervalRef.current) clearInterval(timerIntervalRef.current);\n                        deleteDoc(docSnap.ref); \n                    }\n                }, 1000);\n            }\n\n        }, (error) => {\n            console.error(\"Error listening to conversation:\", error);\n            router.push('/shuffle');\n        });\n\n        // Fetch messages\n        const messagesQuery = onSnapshot(query(collection(db, 'temporaryConversations', conversationId, 'messages'), orderBy('timestamp', 'asc')), (snapshot) => {\n            const msgs = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })) as Message[];\n            setMessages(msgs);\n        });\n\n\n        return () => {\n            if(timerIntervalRef.current) clearInterval(timerIntervalRef.current);\n            unsubscribe();\n            messagesQuery();\n        };\n\n    }, [currentUser, conversationId, router, isMatchPermanent, otherUser, handleNoMatchFound]);\n\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    const handleSendMessage = async () => {\n        if (!messageInput.trim() || !currentUser || !conversation || isMatchPermanent) return;\n\n        const textToSend = messageInput.trim();\n        setMessageInput('');\n\n        const messagesRef = collection(db, 'temporaryConversations', conversationId, 'messages');\n        await addDoc(messagesRef, {\n            text: textToSend,\n            senderId: currentUser.uid,\n            timestamp: serverTimestamp(),\n        });\n        \n        // If it's a bot match, trigger the bot's response\n        if (conversation.isBotMatch) {\n            // Add a small delay to make it feel more natural\n            setTimeout(() => {\n                botChatFlow({ conversationId });\n            }, 1000 + Math.random() * 1500);\n        }\n    };\n\n    const handleHeartClick = async () => {\n        if (!currentUser || !conversation || conversation.isBotMatch) return;\n        \n        const userKey = conversation.user1.uid === currentUser.uid ? 'user1' : 'user2';\n        \n        const convoRef = doc(db, 'temporaryConversations', conversationId);\n        await updateDoc(convoRef, {\n            [`${userKey}.heartClicked`]: true,\n        });\n        \n        toast({ title: 'Beğeni gönderildi!', description: 'Diğer kişinin de beğenmesini bekleyin.'});\n    };\n    \n     const handleExit = () => {\n        const convoRef = doc(db, 'temporaryConversations', conversationId);\n        deleteDoc(convoRef).catch(err => {\n            console.error(\"Could not delete convo on exit: \", err);\n        }).finally(() => {\n             // The onSnapshot listener will handle the redirect\n        });\n    };\n\n    const formatTimeLeft = (seconds: number | null) => {\n        if (seconds === null) return '...';\n        const minutes = Math.floor(seconds / 60);\n        const remainingSeconds = seconds % 60;\n        return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n    };\n\n    if (!conversation || !otherUser || !currentUser) {\n        return (\n            <div className=\"flex h-screen w-full items-center justify-center\">\n                <Loader2 className=\"w-10 h-10 animate-spin text-primary\" />\n            </div>\n        );\n    }\n    \n    const amIUser1 = conversation.user1.uid === currentUser.uid;\n    const myHeartClicked = amIUser1 ? conversation.user1.heartClicked : conversation.user2.heartClicked;\n\n    return (\n        <div className=\"flex flex-col h-screen bg-background\">\n            <header className=\"flex items-center gap-4 p-3 border-b bg-card shrink-0\">\n                <Avatar>\n                    <AvatarImage src={otherUser.avatarUrl} data-ai-hint={otherUser.name}/>\n                    <AvatarFallback>{otherUser.name.charAt(0)}</AvatarFallback>\n                </Avatar>\n                <div className=\"flex-1\">\n                    <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n                        {otherUser.name}\n                        {conversation.isBotMatch && <Bot className=\"w-4 h-4 text-primary\" />}\n                    </h3>\n                </div>\n                <div className=\"flex items-center gap-2 text-lg font-mono font-bold text-primary\">\n                    <Hourglass className=\"w-5 h-5\" />\n                    <span>{formatTimeLeft(timeLeft)}</span>\n                </div>\n                <Button variant=\"ghost\" size=\"icon\" className=\"rounded-full\" onClick={handleExit}>\n                    <X className=\"w-5 h-5\"/>\n                    <span className=\"sr-only\">Sohbetten Çık</span>\n                </Button>\n            </header>\n\n            <ScrollArea className=\"flex-1 bg-muted/30\">\n                <div className=\"p-6 flex flex-col gap-4\">\n                    {messages.map((message) => {\n                        const isSender = message.senderId === currentUser.uid;\n                        return (\n                            <div key={message.id} className={cn('flex items-end gap-2', isSender ? 'self-end' : 'self-start')}>\n                                <div\n                                    className={cn(\n                                        'max-w-xs md:max-w-md rounded-xl px-4 py-2 text-sm break-words',\n                                        isSender\n                                            ? 'bg-primary text-primary-foreground rounded-br-none'\n                                            : 'bg-card border rounded-bl-none'\n                                    )}\n                                >\n                                    <p>{message.text}</p>\n                                </div>\n                            </div>\n                        );\n                    })}\n                    <div ref={messagesEndRef} />\n                </div>\n            </ScrollArea>\n\n            <footer className=\"p-4 border-t bg-card shrink-0\">\n                <div className=\"flex items-center gap-2\">\n                    <Button\n                        size=\"icon\"\n                        className={cn(\"rounded-full w-14 h-14\", myHeartClicked ? \"bg-green-500 hover:bg-green-600\" : \"bg-pink-500 hover:bg-pink-600\")}\n                        onClick={handleHeartClick}\n                        disabled={myHeartClicked || isMatchPermanent || conversation.isBotMatch}\n                    >\n                        <Heart className=\"w-8 h-8 fill-white\" />\n                    </Button>\n                    <Input\n                        placeholder=\"Bir mesaj yaz...\"\n                        className=\"flex-1 h-14\"\n                        value={messageInput}\n                        onChange={(e) => setMessageInput(e.target.value)}\n                        onKeyDown={(e) => {\n                            if (e.key === 'Enter' && !e.shiftKey) {\n                                e.preventDefault();\n                                handleSendMessage();\n                            }\n                        }}\n                        disabled={isMatchPermanent}\n                    />\n                    <Button size=\"icon\" className=\"rounded-full w-14 h-14\" onClick={handleSendMessage} disabled={isMatchPermanent}>\n                        <SendHorizonal className=\"h-6 w-6\" />\n                    </Button>\n                </div>\n            </footer>\n             <AlertDialog open={showMatchModal}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                    <AlertDialogTitle className='text-center text-3xl font-headline text-transparent bg-clip-text bg-gradient-to-r from-pink-500 to-purple-500'>Eşleşme!</AlertDialogTitle>\n                    <AlertDialogDescription className='text-center'>\n                        {otherUser.name} ile artık kalıcı olarak eşleştin. Sohbetinize devam edebilirsiniz.\n                    </AlertDialogDescription>\n                    </AlertDialogHeader>\n                     <div className=\"flex items-center justify-center gap-8 py-4\">\n                        <Avatar className=\"w-24 h-24 border-4 border-primary\">\n                            <AvatarImage src={currentUser.photoURL || ''} data-ai-hint=\"current user\" />\n                        </Avatar>\n                        <Avatar className=\"w-24 h-24 border-4 border-pink-500\">\n                            <AvatarImage src={otherUser.avatarUrl} data-ai-hint={otherUser.name} />\n                        </Avatar>\n                    </div>\n                    <AlertDialogFooter>\n                    <AlertDialogAction asChild>\n                         <Link href={`/chat?conversationId=${[currentUser.uid, otherUser.uid].sort().join('-')}`}>Sohbete Git</Link>\n                    </AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}