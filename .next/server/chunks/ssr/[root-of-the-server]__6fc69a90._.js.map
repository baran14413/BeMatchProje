{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["/**\n * @fileoverview This file initializes and configures the Genkit AI library.\n * It sets up the necessary plugins, in this case, the Google AI plugin for generative models.\n * It exports a configured `ai` object that can be used throughout the application to define\n * and run AI flows, prompts, and tools.\n */\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\nimport {firebase} from \"firebase-admin/lib/firebase-namespace-api\";\nimport App = firebase.app.App;\n\nexport const ai = genkit({\n  plugins: [\n    googleAI({\n      // The Gemini API key is currently read from the `GEMINI_API_KEY`\n      // environment variable.\n    }),\n  ],\n  // Flows are now auto-registered, so we don't need to list them here.\n  // This breaks the circular dependency between this file and the flow files.\n  flows: [],\n});\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACD;AAAA;AACA;AAAA;;;AAIO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QAGT;KACD;IACD,qEAAqE;IACrE,4EAA4E;IAC5E,OAAO,EAAE;AACX","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/translate-text-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI flow for translating text.\n *\n * - translateText - Translates text to Turkish.\n * - TranslateTextInput - The input type for the translateText function.\n * - TranslateTextOutput - The return type for the translateText function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst TranslateTextInputSchema = z.object({\n  textToTranslate: z\n    .string()\n    .describe('The text that needs to be translated.'),\n});\nexport type TranslateTextInput = z.infer<typeof TranslateTextInputSchema>;\n\nconst TranslateTextOutputSchema = z.object({\n  translatedText: z.string().optional().describe('The translated text in Turkish.'),\n  error: z.string().optional().describe('An error message if translation failed.'),\n});\nexport type TranslateTextOutput = z.infer<typeof TranslateTextOutputSchema>;\n\nexport async function translateText(input: TranslateTextInput): Promise<TranslateTextOutput> {\n  return translateTextFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'translateTextPrompt',\n  input: {schema: TranslateTextInputSchema},\n  output: {schema: TranslateTextOutputSchema},\n  model: 'googleai/gemini-1.5-flash',\n  system: `You are an expert translator. Your task is to translate the given text into Turkish.\n  Provide only the translated text as output.`,\n  prompt: `Please translate the following text to Turkish:\n\n\"{{{textToTranslate}}}\"`,\n});\n\nconst translateTextFlow = ai.defineFlow(\n  {\n    name: 'translateTextFlow',\n    inputSchema: TranslateTextInputSchema,\n    outputSchema: TranslateTextOutputSchema,\n  },\n  async input => {\n    try {\n      const {output} = await prompt(input);\n      return output!;\n    } catch (e: any) {\n        console.error(\"Translation flow failed\", e);\n        return { error: 'Çeviri modeli şu anda yoğun. Lütfen daha sonra tekrar deneyin.' };\n    }\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,iBAAiB,uIAAA,CAAA,IAAC,CACf,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC/C,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACxC;AAGO,eAAe,cAAc,KAAyB;IAC3D,OAAO,kBAAkB;AAC3B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,OAAO;IACP,QAAQ,CAAC;6CACkC,CAAC;IAC5C,QAAQ,CAAC;;uBAEY,CAAC;AACxB;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,IAAI;QACF,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;QAC9B,OAAO;IACT,EAAE,OAAO,GAAQ;QACb,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;YAAE,OAAO;QAAiE;IACrF;AACF;;;IA9BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/explore/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {translateText as '406029a3f7f6235cc11d614e16894446b7b1dc86a5'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/explore/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/explore/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/explore/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/explore/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/explore/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/explore/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}