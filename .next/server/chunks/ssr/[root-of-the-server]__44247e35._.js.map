{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["/**\n * @fileoverview This file initializes and configures the Genkit AI library.\n * It sets up the necessary plugins, in this case, the Google AI plugin for generative models.\n * It exports a configured `ai` object that can be used throughout the application to define\n * and run AI flows, prompts, and tools.\n */\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\nimport {firebase} from \"firebase-admin/lib/firebase-namespace-api\";\nimport App = firebase.app.App;\n\nexport const ai = genkit({\n  plugins: [\n    googleAI({\n      // The Gemini API key is currently read from the `GEMINI_API_KEY`\n      // environment variable.\n    }),\n  ],\n  // Flows are now auto-registered, so we don't need to list them here.\n  // This breaks the circular dependency between this file and the flow files.\n  flows: [],\n});\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACD;AAAA;AACA;AAAA;;;AAIO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QAGT;KACD;IACD,qEAAqE;IACrE,4EAA4E;IAC5E,OAAO,EAAE;AACX","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/log-activity-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview A Genkit flow for logging user activity.\n *\n * - logActivity - Logs user activity with IP and user agent.\n * - LogActivityInput - The input type for the logActivity function.\n * - LogActivityOutput - The return type for the logActivity function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport { getFirestore, serverTimestamp, addDoc, collection } from 'firebase-admin/firestore';\nimport { initializeApp, getApps } from 'firebase-admin/app';\n\nconst LogActivityInputSchema = z.object({\n  userId: z.string().describe('The UID of the user.'),\n  userName: z.string().describe('The name of the user.'),\n  userAvatar: z.string().describe('The avatar URL of the user.'),\n  ipAddress: z.string().describe('The IP address of the user.'),\n  userAgent: z.string().describe('The user agent string of the user\\'s browser.'),\n});\nexport type LogActivityInput = z.infer<typeof LogActivityInputSchema>;\n\nconst LogActivityOutputSchema = z.object({\n  success: z.boolean(),\n  error: z.string().optional(),\n});\nexport type LogActivityOutput = z.infer<typeof LogActivityOutputSchema>;\n\nexport async function logActivity(input: LogActivityInput): Promise<LogActivityOutput> {\n    return logActivityFlow(input);\n}\n\nconst logActivityFlow = ai.defineFlow(\n  {\n    name: 'logActivityFlow',\n    inputSchema: LogActivityInputSchema,\n    outputSchema: LogActivityOutputSchema,\n  },\n  async (input) => {\n    if (!getApps().length) {\n        initializeApp();\n    }\n    const db = getFirestore();\n\n    try {\n        await addDoc(collection(db, 'activityLogs'), {\n            user: {\n                uid: input.userId,\n                name: input.userName,\n                avatarUrl: input.userAvatar,\n            },\n            ipAddress: input.ipAddress,\n            userAgent: input.userAgent,\n            timestamp: serverTimestamp(),\n        });\n        return { success: true };\n    } catch (error: any) {\n        console.error(`Failed to log activity for user ${input.userId}:`, error);\n        return { success: false, error: `Activity logging failed: ${error.message}` };\n    }\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;AAEA,MAAM,yBAAyB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtC,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAChC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACjC;AAGA,MAAM,0BAA0B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,SAAS,uIAAA,CAAA,IAAC,CAAC,OAAO;IAClB,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAC5B;AAGO,eAAe,YAAY,KAAuB;IACrD,OAAO,gBAAgB;AAC3B;AAEA,MAAM,kBAAkB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACnC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO;IACL,IAAI,CAAC,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;QACnB,CAAA,GAAA,gJAAA,CAAA,gBAAa,AAAD;IAChB;IACA,MAAM,KAAK,CAAA,GAAA,4JAAA,CAAA,eAAY,AAAD;IAEtB,IAAI;QACA,MAAM,CAAA,GAAA,4JAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,4JAAA,CAAA,aAAU,AAAD,EAAE,IAAI,iBAAiB;YACzC,MAAM;gBACF,KAAK,MAAM,MAAM;gBACjB,MAAM,MAAM,QAAQ;gBACpB,WAAW,MAAM,UAAU;YAC/B;YACA,WAAW,MAAM,SAAS;YAC1B,WAAW,MAAM,SAAS;YAC1B,WAAW,CAAA,GAAA,4JAAA,CAAA,kBAAe,AAAD;QAC7B;QACA,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAY;QACjB,QAAQ,KAAK,CAAC,CAAC,gCAAgC,EAAE,MAAM,MAAM,CAAC,CAAC,CAAC,EAAE;QAClE,OAAO;YAAE,SAAS;YAAO,OAAO,CAAC,yBAAyB,EAAE,MAAM,OAAO,EAAE;QAAC;IAChF;AACF;;;IAhCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/delete-user-data-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview A Genkit flow for completely deleting a user and all their associated data.\n *\n * - deleteUserData - Deletes a user's profile, posts, storage files, conversations, and auth record.\n * - DeleteUserDataInput - The input type for the deleteUserData function.\n * - DeleteUserDataOutput - The return type for the deleteUserData function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport { getFirestore } from 'firebase-admin/firestore';\nimport { getStorage } from 'firebase-admin/storage';\nimport { initializeApp, getApps } from 'firebase-admin/app';\nimport { getAuth } from 'firebase-admin/auth';\n\n\nconst DeleteUserDataInputSchema = z.object({\n  userId: z.string().describe('The UID of the user to be deleted.'),\n});\nexport type DeleteUserDataInput = z.infer<typeof DeleteUserDataInputSchema>;\n\nconst DeleteUserDataOutputSchema = z.object({\n  success: z.boolean(),\n  error: z.string().optional(),\n});\nexport type DeleteUserDataOutput = z.infer<typeof DeleteUserDataOutputSchema>;\n\n\nexport async function deleteUserData(input: DeleteUserDataInput): Promise<DeleteUserDataOutput> {\n    return deleteUserDataFlow(input);\n}\n\n\nconst deleteUserDataFlow = ai.defineFlow(\n  {\n    name: 'deleteUserDataFlow',\n    inputSchema: DeleteUserDataInputSchema,\n    outputSchema: DeleteUserDataOutputSchema,\n  },\n  async ({ userId }) => {\n    \n    // Initialize Firebase Admin SDK if not already initialized\n    if (!getApps().length) {\n        initializeApp();\n    }\n    \n    const db = getFirestore();\n    const storage = getStorage();\n    const auth = getAuth();\n\n    if (!userId) {\n        return { success: false, error: 'Kullanıcı ID\\'si sağlanmadı.' };\n    }\n\n    try {\n        const batch = db.batch();\n\n        // 1. Delete user's posts and associated storage files\n        const postsQuery = db.collection('posts').where('authorId', '==', userId);\n        const postsSnapshot = await postsQuery.get();\n        for (const postDoc of postsSnapshot.docs) {\n            const postData = postDoc.data();\n            if (postData.type === 'photo' && postData.url) {\n                try {\n                    const fileUrl = new URL(postData.url);\n                    const filePath = decodeURIComponent(fileUrl.pathname.split('/o/')[1]);\n                    const fileRef = storage.bucket().file(filePath);\n                    await fileRef.delete();\n                } catch (error: any) {\n                    // It's okay if the file doesn't exist (e.g. already deleted, or bad URL)\n                    if (error.code !== 404) { // GCS not found code\n                        console.warn(`Could not delete storage file for post ${postDoc.id}:`, error);\n                    }\n                }\n            }\n             // Delete subcollections like comments and likes (if they exist)\n            const commentsRef = db.collection('posts').doc(postDoc.id).collection('comments');\n            const likesRef = db.collection('posts').doc(postDoc.id).collection('likes');\n            const commentsSnapshot = await commentsRef.get();\n            const likesSnapshot = await likesRef.get();\n            commentsSnapshot.forEach(doc => batch.delete(doc.ref));\n            likesSnapshot.forEach(doc => batch.delete(doc.ref));\n\n            batch.delete(postDoc.ref);\n        }\n\n        // 2. Delete user's conversations\n        const conversationsQuery = db.collection('conversations').where('users', 'array-contains', userId);\n        const conversationsSnapshot = await conversationsQuery.get();\n        for (const convoDoc of conversationsSnapshot.docs) {\n            // Delete all messages in the conversation's subcollection\n            const messagesRef = db.collection('conversations').doc(convoDoc.id).collection('messages');\n            const messagesSnapshot = await messagesRef.get();\n            messagesSnapshot.forEach(messageDoc => {\n                batch.delete(messageDoc.ref);\n            });\n            // Delete the conversation document itself\n            batch.delete(convoDoc.ref);\n        }\n        \n        // 3. Delete the user document from Firestore and its subcollections\n        const userDocRef = db.collection('users').doc(userId);\n        \n        // Delete user's own subcollections\n        const followersRef = userDocRef.collection('followers');\n        const followingRef = userDocRef.collection('following');\n        const galleryPermsRef = userDocRef.collection('galleryPermissions');\n        \n        const [followersSnap, followingSnap, galleryPermsSnap] = await Promise.all([\n            followersRef.get(),\n            followingRef.get(),\n            galleryPermsRef.get()\n        ]);\n\n        followersSnap.forEach(doc => batch.delete(doc.ref));\n        followingSnap.forEach(doc => batch.delete(doc.ref));\n        galleryPermsSnap.forEach(doc => batch.delete(doc.ref));\n        \n        // Finally, delete the user document itself\n        batch.delete(userDocRef);\n\n        // Commit all batched Firestore deletions\n        await batch.commit();\n\n        // 4. Delete the user from Firebase Authentication\n        await auth.deleteUser(userId);\n\n        return { success: true };\n    } catch (error: any) {\n        console.error(`Failed to delete user ${userId}:`, error);\n        return { success: false, error: `Hesap silinirken bir hata oluştu: ${error.message}` };\n    }\n  }\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/config/xp-config.ts"],"sourcesContent":["/**\n * @fileOverview Bu dosya, XP sisteminin tüm yapılandırmasını merkezileştirir.\n * Çeşitli eylemler için verilen XP miktarını tanımlar, bu eylemler için\n * açıklayıcı nedenler sunar ve tüm seviye rozetleri için SVG verilerini içerir.\n * Bu, XP sisteminin tek bir yerden yönetilmesini ve güncellenmesini kolaylaştırır.\n */\n\n// 1. XP Puan Değerleri\n// ------------------\n// Bu nesne, her bir özel eylem için ne kadar XP verileceğini tanımlar.\n// awardXp akışı, XP vermek için bu değerleri okur.\nexport const XP_VALUES = {\n    NEW_POST: 25,\n    LIKE_SENT: 1,\n    LIKE_RECEIVED: 5,\n    COMMENT_SENT: 2,\n    COMMENT_RECEIVED: 10,\n    RANDOM_MATCH_COMPLETE: 15,\n};\n\n// Bir eylem için XP değerini güvenli bir şekilde alma yardımcı fonksiyonu.\nexport const getXpForAction = (action: keyof typeof XP_VALUES): number => {\n    return XP_VALUES[action] || 0;\n};\n\n\n// 2. XP Kazanma Nedenleri\n// -------------------------\n// Bu nesne, XP'nin neden verildiğine dair kullanıcı dostu açıklamalar sunar.\n// Bunlar, XP kazanım bildirimlerinde kullanılır.\nexport const XP_REASONS = {\n    new_post: 'Yeni gönderi',\n    like_sent: 'Gönderi beğenme',\n    like_received: 'Beğeni alma',\n    comment_sent: 'Yorum yapma',\n    comment_received: 'Yorum alma',\n    random_match_complete: 'Rastgele eşleşme tamamlama',\n};\n\n\n// 3. Seviye Rozeti SVG Verileri\n// -----------------------\n// Bu bölümde, her seviye grubu için SVG tanımları bulunur.\n// LevelBadge bileşeni, doğru rozeti oluşturmak için bu verileri kullanır.\n\n// Seviye 1-9 Rozeti (Bronz Bar)\nconst bronzeBar = `\n<svg viewBox=\"0 0 100 35\" xmlns=\"http://www.w3.org/2000/svg\">\n  <defs>\n    <linearGradient id=\"grad-bronze\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n      <stop offset=\"0%\" style=\"stop-color:#CD7F32;stop-opacity:1\" />\n      <stop offset=\"100%\" style=\"stop-color:#B87333;stop-opacity:1\" />\n    </linearGradient>\n  </defs>\n  <rect x=\"0\" y=\"0\" width=\"100\" height=\"35\" rx=\"17.5\" fill=\"url(#grad-bronze)\" />\n</svg>`;\n\n// Seviye 10-19 Rozeti (Gümüş Bar)\nconst silverBar = `\n<svg viewBox=\"0 0 110 35\" xmlns=\"http://www.w3.org/2000/svg\">\n  <defs>\n    <linearGradient id=\"grad-silver\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n      <stop offset=\"0%\" style=\"stop-color:#C0C0C0;stop-opacity:1\" />\n      <stop offset=\"100%\" style=\"stop-color:#A9A9A9;stop-opacity:1\" />\n    </linearGradient>\n  </defs>\n  <rect x=\"0\" y=\"0\" width=\"110\" height=\"35\" rx=\"17.5\" fill=\"url(#grad-silver)\" />\n  <path d=\"M88 17.5 L84 21 L80 17.5 L84 14 Z\" fill=\"#FFF\" opacity=\"0.7\"/>\n</svg>`;\n\n// Seviye 20-49 Rozeti (Altın Bar)\nconst goldBar = `\n<svg viewBox=\"0 0 120 35\" xmlns=\"http://www.w3.org/2000/svg\">\n  <defs>\n    <linearGradient id=\"grad-gold\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n      <stop offset=\"0%\" style=\"stop-color:#FFD700;stop-opacity:1\" />\n      <stop offset=\"100%\" style=\"stop-color:#FFC400;stop-opacity:1\" />\n    </linearGradient>\n  </defs>\n  <rect x=\"0\" y=\"0\" width=\"120\" height=\"35\" rx=\"17.5\" fill=\"url(#grad-gold)\" />\n  <path d=\"M98 17.5 L94 21 L90 17.5 L94 14 Z\" fill=\"#FFF5B2\" opacity=\"0.8\"/>\n</svg>`;\n\n// Seviye 50-89 Rozeti (Yakut Bar)\nconst rubyBar = `\n<svg viewBox=\"0 0 130 35\" xmlns=\"http://www.w3.org/2000/svg\">\n  <defs>\n    <linearGradient id=\"grad-ruby\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n      <stop offset=\"0%\" style=\"stop-color:#E0115F;stop-opacity:1\" />\n      <stop offset=\"100%\" style=\"stop-color:#B40C4A;stop-opacity:1\" />\n    </linearGradient>\n  </defs>\n  <rect x=\"0\" y=\"0\" width=\"130\" height=\"35\" rx=\"17.5\" fill=\"url(#grad-ruby)\" />\n  <path d=\"M100 17.5 L105 22 L110 17.5 L105 13 Z\" fill=\"#FFFFFF\" />\n</svg>`;\n\n// Seviye 90-99 Rozeti (Elmas Bar)\nconst diamondBar = `\n<svg viewBox=\"0 0 140 35\" xmlns=\"http://www.w3.org/2000/svg\">\n  <defs>\n    <linearGradient id=\"grad-diamond\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n      <stop offset=\"0%\" style=\"stop-color:#B9F2FF;stop-opacity:1\" />\n      <stop offset=\"100%\" style=\"stop-color:#E0FFFF;stop-opacity:1\" />\n    </linearGradient>\n  </defs>\n  <rect x=\"0\" y=\"0\" width=\"140\" height=\"35\" rx=\"17.5\" fill=\"url(#grad-diamond)\" />\n  <path d=\"M105 17.5 L112 24 L119 17.5 L112 11 Z\" fill=\"#FFFFFF\" stroke=\"#005A9C\" stroke-width=\"0.5\"/>\n</svg>`;\n\n// Seviye 100 Rozeti (Efsanevi)\nconst legendaryBadge = `\n<svg viewBox=\"0 0 150 55\" xmlns=\"http://www.w3.org/2000/svg\">\n    <defs>\n        <linearGradient id=\"grad-legendary-bg\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" style=\"stop-color:#4A4E69;stop-opacity:1\" />\n            <stop offset=\"100%\" style=\"stop-color:#22223B;stop-opacity:1\" />\n        </linearGradient>\n        <linearGradient id=\"grad-legendary-star\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n            <stop offset=\"0%\" style=\"stop-color:#FFD700;stop-opacity:1\" />\n            <stop offset=\"100%\" style=\"stop-color:#FFA500;stop-opacity:1\" />\n        </linearGradient>\n         <filter id=\"glow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n            <feGaussianBlur stdDeviation=\"2.5\" result=\"coloredBlur\"/>\n            <feMerge>\n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n            </feMerge>\n        </filter>\n    </defs>\n    <rect x=\"0\" y=\"20\" width=\"150\" height=\"35\" rx=\"17.5\" fill=\"url(#grad-legendary-bg)\" />\n    <g filter=\"url(#glow)\">\n        <path d=\"M65 15 L68 22 L75 22 L70 26 L72 33 L65 29 L58 33 L60 26 L55 22 L62 22 Z\" fill=\"url(#grad-legendary-star)\"/>\n        <path d=\"M40 10 L43 17 L50 17 L45 21 L47 28 L40 24 L33 28 L35 21 L30 17 L37 17 Z\" fill=\"url(#grad-legendary-star)\"/>\n        <path d=\"M90 10 L93 17 L100 17 L95 21 L97 28 L90 24 L83 28 L85 21 L80 17 L87 17 Z\" fill=\"url(#grad-legendary-star)\"/>\n    </g>\n</svg>\n`;\n\nexport const getBadgeSvgForLevel = (level: number): { svg: string, textY: string, textFontSize: string, textColor: string } => {\n    if (level >= 100) return {\n        svg: legendaryBadge,\n        textY: '42',\n        textFontSize: '16px',\n        textColor: '#FFD700'\n    };\n    if (level >= 90) return {\n        svg: diamondBar,\n        textY: '23',\n        textFontSize: '20px',\n        textColor: '#003366'\n    };\n    if (level >= 50) return {\n        svg: rubyBar,\n        textY: '23',\n        textFontSize: '20px',\n        textColor: '#FFFFFF'\n    };\n    if (level >= 20) return {\n        svg: goldBar,\n        textY: '23',\n        textFontSize: '20px',\n        textColor: '#4C3B00'\n    };\n    if (level >= 10) return {\n        svg: silverBar,\n        textY: '23',\n        textFontSize: '20px',\n        textColor: '#363636'\n    };\n    return {\n        svg: bronzeBar,\n        textY: '23',\n        textFontSize: '20px',\n        textColor: '#FFFFFF'\n    };\n};\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,uBAAuB;AACvB,qBAAqB;AACrB,uEAAuE;AACvE,mDAAmD;;;;;;;AAC5C,MAAM,YAAY;IACrB,UAAU;IACV,WAAW;IACX,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,uBAAuB;AAC3B;AAGO,MAAM,iBAAiB,CAAC;IAC3B,OAAO,SAAS,CAAC,OAAO,IAAI;AAChC;AAOO,MAAM,aAAa;IACtB,UAAU;IACV,WAAW;IACX,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,uBAAuB;AAC3B;AAGA,gCAAgC;AAChC,0BAA0B;AAC1B,2DAA2D;AAC3D,0EAA0E;AAE1E,gCAAgC;AAChC,MAAM,YAAY,CAAC;;;;;;;;;MASb,CAAC;AAEP,kCAAkC;AAClC,MAAM,YAAY,CAAC;;;;;;;;;;MAUb,CAAC;AAEP,kCAAkC;AAClC,MAAM,UAAU,CAAC;;;;;;;;;;MAUX,CAAC;AAEP,kCAAkC;AAClC,MAAM,UAAU,CAAC;;;;;;;;;;MAUX,CAAC;AAEP,kCAAkC;AAClC,MAAM,aAAa,CAAC;;;;;;;;;;MAUd,CAAC;AAEP,+BAA+B;AAC/B,MAAM,iBAAiB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BxB,CAAC;AAEM,MAAM,sBAAsB,CAAC;IAChC,IAAI,SAAS,KAAK,OAAO;QACrB,KAAK;QACL,OAAO;QACP,cAAc;QACd,WAAW;IACf;IACA,IAAI,SAAS,IAAI,OAAO;QACpB,KAAK;QACL,OAAO;QACP,cAAc;QACd,WAAW;IACf;IACA,IAAI,SAAS,IAAI,OAAO;QACpB,KAAK;QACL,OAAO;QACP,cAAc;QACd,WAAW;IACf;IACA,IAAI,SAAS,IAAI,OAAO;QACpB,KAAK;QACL,OAAO;QACP,cAAc;QACd,WAAW;IACf;IACA,IAAI,SAAS,IAAI,OAAO;QACpB,KAAK;QACL,OAAO;QACP,cAAc;QACd,WAAW;IACf;IACA,OAAO;QACH,KAAK;QACL,OAAO;QACP,cAAc;QACd,WAAW;IACf;AACJ","debugId":null}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/award-xp-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview A Genkit flow for awarding XP to users and handling level ups.\n *\n * - awardXp - Awards a specified amount of XP to a user.\n * - AwardXpInput - The input type for the awardXp function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport { getFirestore, serverTimestamp, collection, addDoc } from 'firebase-admin/firestore';\nimport { initializeApp, getApps } from 'firebase-admin/app';\nimport { XP_REASONS, getXpForAction } from '@/config/xp-config';\n\nconst AwardXpInputSchema = z.object({\n  userId: z.string().describe('The UID of the user to award XP to.'),\n  xpAmount: z.number().int().positive().describe('The amount of XP to award.'),\n  reason: z.string().optional().describe('The reason for awarding XP (e.g., \"new_post\").'),\n});\nexport type AwardXpInput = z.infer<typeof AwardXpInputSchema>;\n\nconst calculateXpForNextLevel = (level: number) => (level + 1) * 100;\n\nconst awardXpFlow = ai.defineFlow(\n  {\n    name: 'awardXpFlow',\n    inputSchema: AwardXpInputSchema,\n    outputSchema: z.object({ success: z.boolean(), leveledUp: z.boolean() }),\n  },\n  async ({ userId, xpAmount, reason }) => {\n    if (!getApps().length) {\n        initializeApp();\n    }\n    const db = getFirestore();\n    const userRef = db.collection('users').doc(userId);\n\n    try {\n      let leveledUp = false;\n      await db.runTransaction(async (transaction) => {\n        const userDoc = await transaction.get(userRef);\n        if (!userDoc.exists) {\n          console.error(`User ${userId} not found.`);\n          return;\n        }\n\n        const userData = userDoc.data()!;\n        let currentLevel = userData.level || 1;\n        let currentXp = userData.xp || 0;\n        \n        let newXp = currentXp + xpAmount;\n        let xpForNextLevel = calculateXpForNextLevel(currentLevel);\n\n        while (newXp >= xpForNextLevel) {\n          newXp -= xpForNextLevel;\n          currentLevel++;\n          leveledUp = true;\n          xpForNextLevel = calculateXpForNextLevel(currentLevel);\n          \n           // Create a notification for level up\n           const levelUpNotifRef = db.collection('notifications').doc();\n           transaction.set(levelUpNotifRef, {\n               recipientId: userId,\n               type: 'level_up',\n               content: `Seviye ${currentLevel}`,\n               read: false,\n               createdAt: serverTimestamp(),\n               fromUser: {\n                   uid: 'system',\n                   name: 'BeMatch',\n                   avatar: '/icons/app-logo.svg' // System avatar\n               }\n           });\n        }\n        \n        // Create a notification for XP gain, if there's a reason\n        if (reason) {\n            const xpReasonText = XP_REASONS[reason as keyof typeof XP_REASONS] || reason;\n            const xpGainNotifRef = db.collection('notifications').doc();\n            transaction.set(xpGainNotifRef, {\n                recipientId: userId,\n                type: 'xp_gain',\n                content: `${xpReasonText} için **+${xpAmount} XP** kazandın!`,\n                read: false,\n                createdAt: serverTimestamp(),\n                fromUser: {\n                   uid: 'system',\n                   name: 'BeMatch',\n                   avatar: '/icons/app-logo.svg'\n               }\n            });\n        }\n\n        transaction.update(userRef, {\n          xp: newXp,\n          level: currentLevel,\n        });\n      });\n      return { success: true, leveledUp };\n    } catch (error: any) {\n      console.error(`Failed to award XP to user ${userId}:`, error);\n      return { success: false, leveledUp: false };\n    }\n  }\n);\n\n\nexport async function awardXp(\n  input: AwardXpInput\n): Promise<{ success: boolean; leveledUp: boolean }> {\n  const xpToAward = input.reason ? getXpForAction(input.reason as any) : input.xpAmount;\n  return awardXpFlow({ ...input, xpAmount: xpToAward });\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/admin/users/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {logActivity as '4089b26089702b1e5adfebade7e2643cec0eef947b'} from 'ACTIONS_MODULE0'\nexport {deleteUserData as '4076365984dec01c64a5fd543a3b6e6674f10ecaec'} from 'ACTIONS_MODULE1'\nexport {awardXp as '40ee0c2569faa45207a27316c0a2f41e06f3637293'} from 'ACTIONS_MODULE2'\n"],"names":[],"mappings":";AAAA;AACA;AACA","debugId":null}},
    {"offset": {"line": 916, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/admin/users/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/admin/users/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/admin/users/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","debugId":null}},
    {"offset": {"line": 930, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/admin/users/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/admin/users/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/admin/users/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","debugId":null}},
    {"offset": {"line": 944, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}