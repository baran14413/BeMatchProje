{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["/**\n * @fileoverview This file initializes and configures the Genkit AI library.\n * It sets up the necessary plugins, in this case, the Google AI plugin for generative models.\n * It exports a configured `ai` object that can be used throughout the application to define\n * and run AI flows, prompts, and tools.\n */\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\nimport {firebase} from \"firebase-admin/lib/firebase-namespace-api\";\nimport App = firebase.app.App;\n\nexport const ai = genkit({\n  plugins: [\n    googleAI({\n      // The Gemini API key is currently read from the `GEMINI_API_KEY`\n      // environment variable.\n    }),\n  ],\n  // Flows are now auto-registered, so we don't need to list them here.\n  // This breaks the circular dependency between this file and the flow files.\n  flows: [],\n});\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACD;AAAA;AACA;AAAA;;;AAIO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QAGT;KACD;IACD,qEAAqE;IACrE,4EAA4E;IAC5E,OAAO,EAAE;AACX","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/stylize-image-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI flow for stylizing an image based on a text prompt.\n *\n * - stylizeImage - Applies a style to an image based on a text prompt.\n * - StylizeImageInput - The input type for the stylizeImage function.\n * - StylizeImageOutput - The return type for the stylizeImage function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst StylizeImageInputSchema = z.object({\n  photoDataUri: z\n    .string()\n    .describe(\n      \"The original photo to be stylized, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n  prompt: z.string().describe('The text prompt describing the desired style.'),\n});\nexport type StylizeImageInput = z.infer<typeof StylizeImageInputSchema>;\n\nconst StylizeImageOutputSchema = z.object({\n  stylizedImageDataUri: z\n    .string()\n    .optional()\n    .describe('The stylized image as a Base64 encoded data URI.'),\n  error: z\n    .string()\n    .optional()\n    .describe('An error message if the stylization failed.'),\n});\nexport type StylizeImageOutput = z.infer<typeof StylizeImageOutputSchema>;\n\nexport async function stylizeImage(\n  input: StylizeImageInput\n): Promise<StylizeImageOutput> {\n  return stylizeImageFlow(input);\n}\n\nconst stylizeImageFlow = ai.defineFlow(\n  {\n    name: 'stylizeImageFlow',\n    inputSchema: StylizeImageInputSchema,\n    outputSchema: StylizeImageOutputSchema,\n  },\n  async ({photoDataUri, prompt}) => {\n    try {\n      const {media} = await ai.generate({\n        model: 'googleai/gemini-2.0-flash-preview-image-generation',\n        prompt: [\n          {media: {url: photoDataUri}},\n          {text: `Apply the following style to the image: ${prompt}`},\n        ],\n        config: {\n          responseModalities: ['TEXT', 'IMAGE'],\n        },\n      });\n\n      if (!media?.url) {\n        throw new Error('The model did not return an image.');\n      }\n\n      return {stylizedImageDataUri: media.url};\n    } catch (e: any) {\n      console.error('Image stylization flow failed', e);\n      return {\n        error:\n          'Görsel stili uygulanırken bir hata oluştu. Lütfen tekrar deneyin.',\n      };\n    }\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,0BAA0B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CACP;IAEJ,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAGA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,sBAAsB,uIAAA,CAAA,IAAC,CACpB,MAAM,GACN,QAAQ,GACR,QAAQ,CAAC;IACZ,OAAO,uIAAA,CAAA,IAAC,CACL,MAAM,GACN,QAAQ,GACR,QAAQ,CAAC;AACd;AAGO,eAAe,aACpB,KAAwB;IAExB,OAAO,iBAAiB;AAC1B;AAEA,MAAM,mBAAmB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACpC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO,EAAC,YAAY,EAAE,MAAM,EAAC;IAC3B,IAAI;QACF,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;YAChC,OAAO;YACP,QAAQ;gBACN;oBAAC,OAAO;wBAAC,KAAK;oBAAY;gBAAC;gBAC3B;oBAAC,MAAM,CAAC,wCAAwC,EAAE,QAAQ;gBAAA;aAC3D;YACD,QAAQ;gBACN,oBAAoB;oBAAC;oBAAQ;iBAAQ;YACvC;QACF;QAEA,IAAI,CAAC,OAAO,KAAK;YACf,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO;YAAC,sBAAsB,MAAM,GAAG;QAAA;IACzC,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO;YACL,OACE;QACJ;IACF;AACF;;;IArCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/moderate-image-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI flow for moderating uploaded images.\n *\n * - moderateImage - Checks if an image is appropriate for a profile picture.\n * - ModerateImageInput - The input type for the moderateImage function.\n * - ModerateImageOutput - The return type for the moderateImage function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ModerateImageInputSchema = z.object({\n  photoDataUri: z\n    .string()\n    .describe(\n      \"A photo to be moderated, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n});\nexport type ModerateImageInput = z.infer<typeof ModerateImageInputSchema>;\n\nconst ModerateImageOutputSchema = z.object({\n  isSafe: z.boolean().describe('Whether the image is considered safe and appropriate for a profile picture.'),\n  reason: z.string().optional().describe('The reason why the image was flagged as not safe. Only present if isSafe is false.'),\n});\nexport type ModerateImageOutput = z.infer<typeof ModerateImageOutputSchema>;\n\nexport async function moderateImage(input: ModerateImageInput): Promise<ModerateImageOutput> {\n  return moderateImageFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'moderateImagePrompt',\n  input: {schema: ModerateImageInputSchema},\n  output: {schema: ModerateImageOutputSchema},\n  model: 'googleai/gemini-1.5-flash',\n  system: `You are an expert image moderator for a dating application.\nYou need to determine if the provided image is appropriate for a user's profile picture.\n\nThe image should be flagged as NOT SAFE if it contains any of the following:\n- Nudity or sexually suggestive content.\n- Violence, gore, or weapons.\n- Hateful symbols or gestures.\n- Illegal activities or substances.\n- Is not a real photo (e.g., a cartoon, illustration, or meme).\n- Does not contain a person.\n\nIf the image is safe, set isSafe to true.\nIf the image is not safe, set isSafe to false and provide a brief, user-friendly reason in Turkish.`,\n  prompt: `Please moderate this image: {{media url=photoDataUri}}`,\n});\n\nconst moderateImageFlow = ai.defineFlow(\n  {\n    name: 'moderateImageFlow',\n    inputSchema: ModerateImageInputSchema,\n    outputSchema: ModerateImageOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CACP;AAEN;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,QAAQ,uIAAA,CAAA,IAAC,CAAC,OAAO,GAAG,QAAQ,CAAC;IAC7B,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACzC;AAGO,eAAe,cAAc,KAAyB;IAC3D,OAAO,kBAAkB;AAC3B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,OAAO;IACP,QAAQ,CAAC;;;;;;;;;;;;mGAYwF,CAAC;IAClG,QAAQ,CAAC,sDAAsD,CAAC;AAClE;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAlCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/create/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {stylizeImage as '40803c2a23dd35c36bbf929ece9b7092e4145d6dec'} from 'ACTIONS_MODULE0'\nexport {moderateImage as '4027a3c2514dea80f0671fd996b6b9be4c1afd6550'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/create/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/create/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/create/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/create/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/create/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/create/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}