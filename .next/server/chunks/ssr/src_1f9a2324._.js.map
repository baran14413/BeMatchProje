{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,kKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/chat/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect, useMemo, useRef, Fragment } from 'react';\nimport { useRouter, useSearchParams }from 'next/navigation';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { SendHorizonal, Search, Mic, Phone, Video, Image as ImageIcon, Smile, ArrowLeft, Pencil, Trash2, BellOff, Pin, X, Loader2, Undo, CornerUpLeft, MoreHorizontal, Heart, ThumbsUp, Laugh, Angry, Wow, Check as CheckIcon, Save } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport Link from 'next/link';\nimport { useToast } from '@/hooks/use-toast';\nimport { Badge } from '@/components/ui/badge';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuSeparator, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';\nimport { collection, query, where, getDocs, onSnapshot, doc, orderBy, addDoc, serverTimestamp, Timestamp, updateDoc, getDoc, arrayUnion, arrayRemove, deleteDoc, setDoc } from 'firebase/firestore';\nimport { auth, db } from '@/lib/firebase';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { tr } from 'date-fns/locale';\n\ntype UserData = {\n    uid: string;\n    name: string;\n    avatarUrl: string;\n    isOnline: boolean;\n};\n\ntype Message = {\n    id: string;\n    text: string;\n    senderId: string;\n    timestamp: Timestamp;\n    reaction?: string;\n    isEdited?: boolean;\n    deletedFor?: string[];\n    deletedForEveryone?: boolean;\n};\n\ntype Conversation = {\n    id: string;\n    otherUser: UserData;\n    lastMessage: {\n        text: string;\n        timestamp: Timestamp | null;\n    } | null;\n    isPinned: boolean;\n    isMuted: boolean;\n    unreadCount: number;\n};\n\nconst REACTIONS = ['❤️', '👍', '😂', '😢', '😮'];\n\n\nconst formatRelativeTime = (date: Date | null) => {\n    if (!date) return '';\n    try {\n        return formatDistanceToNowStrict(date, {\n            addSuffix: true,\n            locale: tr,\n        });\n    } catch (e) {\n        return 'az önce';\n    }\n};\n\n\nexport default function ChatPage() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const { toast } = useToast();\n  const currentUser = auth.currentUser;\n\n  const [conversations, setConversations] = useState<Conversation[]>([]);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [activeChat, setActiveChat] = useState<Conversation | null>(null);\n  const [messageInput, setMessageInput] = useState('');\n  \n  const [loading, setLoading] = useState(true);\n  const [chatLoading, setChatLoading] = useState(false);\n  const [redirecting, setRedirecting] = useState(false);\n\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<Set<string>>(new Set());\n  \n  const [editingMessageId, setEditingMessageId] = useState<string | null>(null);\n\n  const scrollAreaRef = useRef<HTMLDivElement>(null);\n  const messageInputRef = useRef<HTMLInputElement>(null);\n\n  // A chat view is open if a conversationId or userId is present in the URL\n  const isChatViewOpen = searchParams.has('conversationId') || searchParams.has('userId');\n\n  // Find or create conversation when userId is in URL\n  useEffect(() => {\n    const userIdToChat = searchParams.get('userId');\n    if (userIdToChat && currentUser && !searchParams.has('conversationId')) {\n        const findOrCreateConversation = async () => {\n            setRedirecting(true);\n            try {\n                // Generate a consistent conversation ID by sorting UIDs\n                const conversationId = [currentUser.uid, userIdToChat].sort().join('-');\n                const conversationRef = doc(db, 'conversations', conversationId);\n                const conversationSnap = await getDoc(conversationRef);\n\n                if (!conversationSnap.exists()) {\n                     // Create a new conversation with the specific ID\n                     await setDoc(conversationRef, {\n                        users: [currentUser.uid, userIdToChat],\n                        createdAt: serverTimestamp(),\n                        lastMessage: null,\n                     });\n                }\n                router.replace(`/chat?conversationId=${conversationId}`, { scroll: false });\n                \n            } catch (error) {\n                console.error(\"Error finding or creating conversation: \", error);\n                toast({ title: \"Sohbet başlatılamadı.\", variant: \"destructive\" });\n                router.replace('/chat');\n            } finally {\n                // No need to setRedirecting(false) here, it's handled by the main convo loader\n            }\n        };\n        findOrCreateConversation();\n    }\n  }, [searchParams, currentUser, router, toast]);\n\n  // Fetch conversations\n  useEffect(() => {\n    if (!currentUser) {\n        setLoading(false);\n        return;\n    }\n\n    const q = query(collection(db, 'conversations'), where('users', 'array-contains', currentUser.uid));\n    \n    const unsubscribe = onSnapshot(q, async (querySnapshot) => {\n        const convosPromises = querySnapshot.docs.map(async (docSnap) => {\n            const data = docSnap.data();\n            const otherUserId = data.users.find((uid: string) => uid !== currentUser.uid);\n            \n            if (otherUserId) {\n                const userDoc = await getDoc(doc(db, 'users', otherUserId));\n                if (userDoc.exists()) {\n                    const userData = userDoc.data() as UserData;\n                    return {\n                        id: docSnap.id,\n                        otherUser: { ...userData, uid: otherUserId },\n                        lastMessage: data.lastMessage || null,\n                        isPinned: false, // TODO\n                        isMuted: false,  // TODO\n                        unreadCount: 0,  // TODO\n                    } as Conversation;\n                }\n            }\n            return null;\n        });\n        \n        const resolvedConvos = (await Promise.all(convosPromises)).filter(c => c !== null) as Conversation[];\n        \n        // Sort conversations by last message timestamp client-side\n        resolvedConvos.sort((a, b) => {\n            const timeA = a.lastMessage?.timestamp?.toMillis() || 0;\n            const timeB = b.lastMessage?.timestamp?.toMillis() || 0;\n            return timeB - timeA;\n        });\n\n        setConversations(resolvedConvos);\n        setLoading(false);\n        setRedirecting(false); // Stop redirecting loader once conversations load\n    }, (error) => {\n        console.error(\"Error fetching conversations: \", error);\n        toast({ title: \"Sohbetler yüklenirken bir hata oluştu.\", variant: 'destructive'});\n        setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, [currentUser, toast]);\n\n\n  // Fetch active chat details and messages\n  useEffect(() => {\n    const conversationId = searchParams.get('conversationId');\n\n    if (!conversationId || !currentUser) {\n        setActiveChat(null);\n        setMessages([]);\n        return;\n    }\n    \n    setChatLoading(true);\n\n    // Listener for the active conversation details\n    const convoUnsubscribe = onSnapshot(doc(db, 'conversations', conversationId), async (docSnap) => {\n        if (docSnap.exists()) {\n            const data = docSnap.data();\n            const otherUserId = data.users.find((uid: string) => uid !== currentUser.uid);\n\n            if (otherUserId) {\n                const userDoc = await getDoc(doc(db, 'users', otherUserId));\n                if (userDoc.exists()) {\n                    const userData = userDoc.data() as UserData;\n                    setActiveChat({\n                        id: docSnap.id,\n                        otherUser: { ...userData, uid: otherUserId },\n                        lastMessage: data.lastMessage || null,\n                        isPinned: false,\n                        isMuted: false,\n                        unreadCount: 0,\n                    });\n                }\n            }\n        } else {\n             // Conversation might have been deleted\n             setActiveChat(null);\n             router.replace('/chat');\n        }\n    }, (error) => {\n        console.error(\"Error fetching active chat details:\", error);\n        toast({title: \"Sohbet detayları alınamadı.\", variant: \"destructive\"});\n    });\n\n    // Listener for messages in the active conversation\n    const messagesQuery = query(collection(db, 'conversations', conversationId, 'messages'), orderBy('timestamp', 'asc'));\n    const messagesUnsubscribe = onSnapshot(messagesQuery, (querySnapshot) => {\n        const msgs = querySnapshot.docs\n            .map(doc => ({ id: doc.id, ...doc.data() } as Message))\n            .filter(m => !m.deletedFor?.includes(currentUser.uid)); // Filter messages deleted for me\n        setMessages(msgs);\n        setChatLoading(false); // Messages are loaded\n    }, (error) => {\n        console.error(\"Error fetching messages: \", error);\n        toast({ title: \"Mesajlar yüklenirken bir hata oluştu.\", variant: 'destructive'});\n        setChatLoading(false);\n    });\n\n    return () => {\n        convoUnsubscribe();\n        messagesUnsubscribe();\n    };\n  }, [searchParams, currentUser, toast, router]);\n  \n  // Scroll to bottom of chat\n  useEffect(() => {\n    if (scrollAreaRef.current) {\n        const scrollElement = scrollAreaRef.current.children[1] as HTMLDivElement;\n        if(scrollElement) {\n           scrollElement.scrollTop = scrollElement.scrollHeight;\n        }\n    }\n  }, [messages]);\n\n\n  const handleSendMessage = async () => {\n    if (!messageInput.trim() || !activeChat || !currentUser) return;\n\n    const conversationRef = doc(db, 'conversations', activeChat.id);\n    const messagesRef = collection(conversationRef, 'messages');\n    \n    const tempMessageInput = messageInput.trim();\n    setMessageInput('');\n\n    try {\n        await addDoc(messagesRef, {\n            text: tempMessageInput,\n            senderId: currentUser.uid,\n            timestamp: serverTimestamp(),\n        });\n        \n        await updateDoc(conversationRef, {\n            lastMessage: {\n                text: tempMessageInput,\n                timestamp: serverTimestamp(),\n            }\n        });\n\n    } catch (error) {\n         console.error(\"Error sending message: \", error);\n         toast({ title: \"Mesaj gönderilemedi.\", variant: 'destructive'});\n         setMessageInput(tempMessageInput); // Restore input on error\n    }\n  };\n  \n  const handleItemClick = (convo: Conversation) => {\n    if (isEditMode) {\n      const newSelectedIds = new Set(selectedIds);\n      if (newSelectedIds.has(convo.id)) {\n        newSelectedIds.delete(convo.id);\n      } else {\n        newSelectedIds.add(convo.id);\n      }\n      setSelectedIds(newSelectedIds);\n    } else {\n      router.push(`/chat?conversationId=${convo.id}`);\n    }\n  };\n\n\n  const handleBackToList = () => {\n      router.push('/chat');\n  }\n  \n  const handleToggleEditMode = () => {\n    setIsEditMode(!isEditMode);\n    setSelectedIds(new Set()); // Exit edit mode clears selection\n  };\n  \n  const handleDelete = async () => {\n    if (!activeChat) return;\n    const promises = Array.from(selectedIds).map(id => deleteDoc(doc(db, 'conversations', id)));\n    try {\n        await Promise.all(promises);\n        toast({ title: `${selectedIds.size} sohbet silindi.` });\n        setIsEditMode(false);\n        setSelectedIds(new Set());\n         if (selectedIds.has(activeChat.id)) {\n            router.push('/chat');\n        }\n    } catch(error) {\n        console.error(\"Error deleting conversations: \", error);\n        toast({ title: 'Sohbetler silinirken bir hata oluştu.', variant: 'destructive'});\n    }\n  };\n  \n    const handleReaction = async (messageId: string, reaction: string | null) => {\n        if (!activeChat) return;\n        const messageRef = doc(db, 'conversations', activeChat.id, 'messages', messageId);\n        await updateDoc(messageRef, { reaction: reaction });\n    };\n\n    const startEditing = (message: Message) => {\n        setEditingMessageId(message.id);\n        setMessageInput(message.text);\n        messageInputRef.current?.focus();\n    };\n\n    const cancelEditing = () => {\n        setEditingMessageId(null);\n        setMessageInput('');\n    };\n    \n    const saveEditing = async () => {\n        if (!activeChat || !editingMessageId || !messageInput.trim()) return;\n        const messageRef = doc(db, 'conversations', activeChat.id, 'messages', editingMessageId);\n        await updateDoc(messageRef, {\n            text: messageInput.trim(),\n            isEdited: true\n        });\n        cancelEditing();\n    };\n    \n    const handleDeleteMessageForMe = async (messageId: string) => {\n        if (!activeChat || !currentUser) return;\n        const messageRef = doc(db, 'conversations', activeChat.id, 'messages', messageId);\n        await updateDoc(messageRef, {\n            deletedFor: arrayUnion(currentUser.uid)\n        });\n    };\n\n    const handleDeleteMessageForEveryone = async (messageId: string) => {\n        if (!activeChat) return;\n        const messageRef = doc(db, 'conversations', activeChat.id, 'messages', messageId);\n        await updateDoc(messageRef, {\n            text: 'Bu mesaj silindi.',\n            reaction: null,\n            isEdited: false,\n            deletedForEveryone: true,\n        });\n    };\n    \n    const handleFormSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (editingMessageId) {\n            saveEditing();\n        } else {\n            handleSendMessage();\n        }\n    };\n\n\n  if (redirecting) {\n    return (\n        <div className=\"flex h-screen w-full items-center justify-center bg-background\">\n            <Loader2 className=\"w-10 h-10 animate-spin text-primary\" />\n        </div>\n    );\n  }\n\n  return (\n    <div className=\"flex h-screen bg-background text-foreground\">\n      {/* Sidebar with Conversation List */}\n      <aside className={cn(\n        \"w-full flex-col h-full flex\",\n        isChatViewOpen ? \"hidden md:flex md:w-1/3 md:border-r\" : \"flex\",\n      )}>\n        <header className=\"flex items-center gap-4 p-3 border-b bg-card shrink-0 sticky top-0\">\n            {isEditMode ? (\n                <>\n                   <div className='flex items-center gap-2'>\n                       <Button variant=\"ghost\" size=\"icon\" className=\"rounded-full\" onClick={handleDelete} disabled={selectedIds.size === 0}>\n                           <Trash2 className=\"w-5 h-5\"/>\n                       </Button>\n                        <Button variant=\"ghost\" size=\"icon\" className=\"rounded-full\" onClick={() => {}} disabled={selectedIds.size !== 1}>\n                           <BellOff className=\"w-5 h-5\"/>\n                       </Button>\n                        <Button variant=\"ghost\" size=\"icon\" className=\"rounded-full\" onClick={() => {}} disabled={selectedIds.size !== 1}>\n                           <Pin className=\"w-5 h-5\"/>\n                       </Button>\n                   </div>\n                   <div className='flex-1 text-center font-semibold'>\n                        {selectedIds.size > 0 ? `${selectedIds.size} seçildi` : \"Öğe seçin\"}\n                   </div>\n                   <Button variant=\"ghost\" size=\"icon\" className=\"rounded-full\" onClick={handleToggleEditMode}>\n                       <X className=\"w-5 h-5\"/>\n                   </Button>\n                </>\n            ) : (\n                 <>\n                    <h2 className=\"text-xl font-bold font-headline flex-1\">Sohbetler</h2>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"rounded-full\" onClick={handleToggleEditMode}>\n                        <Pencil className=\"w-5 h-5\"/>\n                    </Button>\n                 </>\n            )}\n        </header>\n\n        <div className='flex-1 flex flex-col'>\n            <div className=\"p-4 border-b\">\n                <div className=\"relative\">\n                    <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n                    <Input placeholder=\"Ara...\" className=\"pl-8\" />\n                </div>\n            </div>\n            <ScrollArea className=\"flex-1\">\n            {loading ? (\n                <div className=\"p-4 space-y-4\">\n                    {[...Array(5)].map((_, i) => (\n                        <div key={i} className=\"flex items-center gap-3\">\n                            <Skeleton className=\"w-12 h-12 rounded-full\" />\n                            <div className=\"flex-1 space-y-2\">\n                                <Skeleton className=\"h-4 w-24\" />\n                                <Skeleton className=\"h-4 w-48\" />\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            ) : conversations.length > 0 ? (\n                conversations.map((convo) => (\n                    <div\n                    key={convo.id}\n                    className={cn(\n                        'flex items-center gap-3 p-4 cursor-pointer transition-colors',\n                        selectedIds.has(convo.id) ? 'bg-primary/20' : 'hover:bg-muted/50',\n                        convo.unreadCount > 0 && 'bg-primary/5',\n                        activeChat?.id === convo.id && 'bg-muted'\n                    )}\n                    onClick={() => handleItemClick(convo)}\n                    >\n                    {isEditMode && (\n                      <Checkbox\n                        checked={selectedIds.has(convo.id)}\n                        onCheckedChange={() => handleItemClick(convo)}\n                        className=\"h-5 w-5\"\n                      />\n                    )}\n                    <div className='relative'>\n                        <Avatar className='w-12 h-12'>\n                        <AvatarImage src={convo.otherUser.avatarUrl} data-ai-hint={convo.otherUser.name} />\n                        <AvatarFallback>{convo.otherUser.name?.charAt(0) || '?'}</AvatarFallback>\n                        </Avatar>\n                        {convo.otherUser.isOnline && <div className='absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-background'/>}\n                    </div>\n                    <div className=\"flex-1 overflow-hidden\">\n                        <div className=\"flex justify-between items-center\">\n                            <p className={cn(\"truncate\", convo.unreadCount > 0 ? \"font-bold\" : \"font-semibold\")}>{convo.otherUser.name}</p>\n                            <span className=\"text-xs text-muted-foreground font-mono whitespace-nowrap ml-2\">{formatRelativeTime(convo.lastMessage?.timestamp?.toDate() || null)}</span>\n                        </div>\n                        <p className={cn(\"text-sm truncate\", convo.unreadCount > 0 ? \"font-bold text-foreground\" : \"text-muted-foreground\")}>{convo.lastMessage?.text}</p>\n                    </div>\n                     <div className=\"flex flex-col items-end gap-1 self-start pt-1\">\n                        {convo.unreadCount > 0 && (\n                            <Badge className=\"bg-green-500 text-white w-5 h-5 flex items-center justify-center p-0 text-xs\">{convo.unreadCount}</Badge>\n                        )}\n                        {convo.isMuted && <BellOff className=\"w-4 h-4 text-muted-foreground\" />}\n                     </div>\n                    </div>\n                ))\n            ) : (\n                <div className=\"text-center text-muted-foreground p-10\">\n                    <p>Henüz sohbet yok.</p>\n                    <p className=\"text-sm\">Yeni bir eşleşme bulunca sohbetleriniz burada görünecek.</p>\n                </div>\n            )}\n            </ScrollArea>\n        </div>\n      </aside>\n\n      {/* Main Chat Area */}\n      <main className={cn(\n          \"w-full flex-col h-full\",\n          isChatViewOpen ? \"flex\" : \"hidden md:hidden\",\n      )}>\n        {activeChat ? (\n          <>\n            <header className=\"flex items-center gap-4 p-3 border-b bg-card shrink-0\">\n               <Button variant=\"ghost\" size=\"icon\" className=\"rounded-full md:hidden\" onClick={handleBackToList}>\n                    <ArrowLeft className=\"w-5 h-5\"/>\n                </Button>\n              <Avatar>\n                 <AvatarImage src={activeChat.otherUser.avatarUrl} data-ai-hint={activeChat.otherUser.name} />\n                 <AvatarFallback>{activeChat.otherUser.name.charAt(0)}</AvatarFallback>\n              </Avatar>\n              <div className='flex-1'>\n                 <h3 className=\"text-lg font-semibold\">{activeChat.otherUser.name}</h3>\n                 {activeChat.otherUser.isOnline && <p className='text-xs text-green-500'>Çevrimiçi</p>}\n              </div>\n              <div className='flex items-center gap-2'>\n                <Button variant=\"ghost\" size=\"icon\" className=\"rounded-full\">\n                    <Phone className=\"w-5 h-5\"/>\n                </Button>\n                 <Button variant=\"ghost\" size=\"icon\" className=\"rounded-full\">\n                    <Video className=\"w-5 h-5\"/>\n                </Button>\n              </div>\n            </header>\n            <ScrollArea className=\"flex-1 bg-muted/30\" ref={scrollAreaRef}>\n              <div className='p-6'>\n                {chatLoading ? (\n                    <div className=\"flex justify-center items-center h-full\">\n                      <Loader2 className=\"w-8 h-8 animate-spin text-primary\" />\n                    </div>\n                ) : (\n                  <div className=\"flex flex-col gap-1\">\n                    {messages.map((message) => {\n                       const isDeleted = message.deletedForEveryone;\n                       const messageContent = (\n                            <div className={cn(\n                                'rounded-xl px-4 py-2 text-sm relative',\n                                isDeleted ? 'italic text-muted-foreground' : (message.senderId === currentUser?.uid ? 'bg-primary text-primary-foreground rounded-br-none' : 'bg-card border rounded-bl-none')\n                            )}>\n                                <p>{message.text}</p>\n                                {!isDeleted && (\n                                    <>\n                                        <div className={cn('flex items-center gap-2 text-xs mt-1', message.senderId === currentUser?.uid ? 'text-primary-foreground/70' : 'text-muted-foreground/70')}>\n                                            {message.isEdited && <span>(düzenlendi)</span>}\n                                            <span>{message.timestamp?.toDate().toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}</span>\n                                        </div>\n                                        {message.reaction && (\n                                            <div className=\"absolute -bottom-2.5 rounded-full bg-background border px-1.5 py-0.5 text-xs\"\n                                                style={{ [message.senderId === currentUser?.uid ? 'right' : 'left']: '10px' }}>\n                                                {message.reaction}\n                                            </div>\n                                        )}\n                                    </>\n                                )}\n                            </div>\n                       );\n\n                       return (\n                           <div key={message.id} className={cn('flex items-end gap-2 max-w-lg group', message.senderId === currentUser?.uid ? 'self-end flex-row-reverse' : 'self-start')}>\n                                {isDeleted ? (\n                                    messageContent\n                                ) : (\n                                    <DropdownMenu>\n                                        <DropdownMenuTrigger asChild>\n                                           <div className='cursor-pointer'>{messageContent}</div>\n                                        </DropdownMenuTrigger>\n                                        <DropdownMenuContent align={message.senderId === currentUser?.uid ? 'end' : 'start'}>\n                                           <div className=\"flex gap-1 p-1\">\n                                                {REACTIONS.map(r => (\n                                                    <Button key={r} variant=\"ghost\" size=\"icon\" className=\"h-8 w-8 rounded-full\" onClick={() => handleReaction(message.id, message.reaction === r ? null : r)}>\n                                                        {r}\n                                                    </Button>\n                                                ))}\n                                           </div>\n                                           <DropdownMenuSeparator />\n                                           {message.senderId === currentUser?.uid && (\n                                             <DropdownMenuItem onClick={() => startEditing(message)}>\n                                                 <Pencil className=\"mr-2 h-4 w-4\" />\n                                                 <span>Düzenle</span>\n                                             </DropdownMenuItem>\n                                           )}\n                                            <DropdownMenuItem onClick={() => handleDeleteMessageForMe(message.id)}>\n                                                <Trash2 className=\"mr-2 h-4 w-4\" />\n                                                <span>Benden Sil</span>\n                                            </DropdownMenuItem>\n                                            {message.senderId === currentUser?.uid && (\n                                                <DropdownMenuItem className=\"text-destructive\" onClick={() => handleDeleteMessageForEveryone(message.id)}>\n                                                    <Undo className=\"mr-2 h-4 w-4\" />\n                                                    <span>Herkesten Sil</span>\n                                                </DropdownMenuItem>\n                                            )}\n                                        </DropdownMenuContent>\n                                    </DropdownMenu>\n                                )}\n                           </div>\n                       )\n                    })}\n                  </div>\n                )}\n              </div>\n            </ScrollArea>\n            <footer className=\"p-4 border-t bg-card shrink-0\">\n              <form onSubmit={handleFormSubmit} className=\"flex items-center gap-2\">\n                 {editingMessageId ? (\n                     <>\n                        <Button type=\"button\" size=\"icon\" variant=\"ghost\" className=\"rounded-full shrink-0\" onClick={cancelEditing}>\n                            <X className=\"w-5 h-5 text-destructive\" />\n                        </Button>\n                        <Input\n                            ref={messageInputRef}\n                            placeholder=\"Mesajı düzenle...\"\n                            className=\"flex-1 bg-muted border-none rounded-full\"\n                            value={messageInput}\n                            onChange={(e) => setMessageInput(e.target.value)}\n                        />\n                        <Button type=\"submit\" size=\"icon\" className=\"rounded-full bg-green-500 text-white shrink-0\">\n                            <CheckIcon className=\"h-5 w-5\" />\n                        </Button>\n                     </>\n                 ) : (\n                    <>\n                         <Button type=\"button\" size=\"icon\" variant=\"ghost\" className=\"rounded-full shrink-0\">\n                            <ImageIcon className=\"w-5 h-5\" />\n                         </Button>\n                         <Button type=\"button\" size=\"icon\" variant=\"ghost\" className=\"rounded-full shrink-0\">\n                            <Smile className=\"w-5 h-5\" />\n                         </Button>\n                        <Input\n                            ref={messageInputRef}\n                            placeholder=\"Bir mesaj yaz...\"\n                            className=\"flex-1 bg-muted border-none rounded-full\"\n                            value={messageInput}\n                            onChange={(e) => setMessageInput(e.target.value)}\n                        />\n                         {messageInput ? (\n                            <Button type=\"submit\" size=\"icon\" className=\"rounded-full bg-primary text-primary-foreground shrink-0\">\n                                <SendHorizonal className=\"h-5 w-5\" />\n                            </Button>\n                         ) : (\n                            <Button type=\"button\" size=\"icon\" className=\"rounded-full bg-primary text-primary-foreground shrink-0\">\n                                <Mic className=\"h-5 w-5\" />\n                            </Button>\n                         )}\n                    </>\n                 )}\n              </form>\n            </footer>\n          </>\n        ) : isChatViewOpen && (\n            <div className=\"flex h-full w-full items-center justify-center bg-background\">\n                <Loader2 className=\"w-10 h-10 animate-spin text-primary\" />\n            </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\n    \n\n    \n\n    \n"],"names":[],"mappings":"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","debugId":null}}]
}