{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/match/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useMemo, useRef } from 'react';\nimport Image from 'next/image';\nimport TinderCard from 'react-tinder-card';\nimport { Heart, X, Undo } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\n\nconst db = [\n  {\n    id: 1,\n    name: 'Elif, 28',\n    image: 'https://placehold.co/600x800.png',\n    aiHint: 'portrait woman smiling',\n  },\n  {\n    id: 2,\n    name: 'Mehmet, 32',\n    image: 'https://placehold.co/600x800.png',\n    aiHint: 'portrait man hiking',\n  },\n  {\n    id: 3,\n    name: 'Ayşe, 25',\n    image: 'https://placehold.co/600x800.png',\n    aiHint: 'portrait woman reading',\n  },\n    {\n    id: 4,\n    name: 'Can, 29',\n    image: 'https://placehold.co/600x800.png',\n    aiHint: 'portrait man professional',\n  },\n  {\n    id: 5,\n    name: 'Zeynep, 30',\n    image: 'https://placehold.co/600x800.png',\n    aiHint: 'portrait woman drinking coffee',\n  },\n];\n\ntype TinderCardRef = {\n  swipe(dir: 'left' | 'right' | 'up' | 'down'): Promise<void>;\n  restoreCard(): Promise<void>;\n};\n\nexport default function MatchPage() {\n  const [currentIndex, setCurrentIndex] = useState(db.length - 1);\n  const [lastDirection, setLastDirection] = useState<string | undefined>();\n  const currentIndexRef = useRef(currentIndex);\n\n  const childRefs = useMemo(\n    () =>\n      Array(db.length)\n        .fill(0)\n        .map(() => React.createRef<TinderCardRef>()),\n    []\n  );\n\n  const updateCurrentIndex = (val: number) => {\n    setCurrentIndex(val);\n    currentIndexRef.current = val;\n  };\n\n  const canGoBack = currentIndex < db.length - 1;\n  const canSwipe = currentIndex >= 0;\n\n  const swiped = (direction: string, name: string, index: number) => {\n    setLastDirection(direction);\n    updateCurrentIndex(index - 1);\n  };\n\n  const outOfFrame = (name: string, idx: number) => {\n    console.log(`${name} (${idx}) left the screen!`, currentIndexRef.current);\n    if (currentIndexRef.current >= idx) {\n        childRefs[idx].current?.restoreCard();\n    }\n  };\n\n  const swipe = async (dir: 'left' | 'right') => {\n    if (canSwipe && currentIndex < db.length) {\n      await childRefs[currentIndex].current?.swipe(dir);\n    }\n  };\n\n  const goBack = async () => {\n    if (!canGoBack) return;\n    const newIndex = currentIndex + 1;\n    updateCurrentIndex(newIndex);\n    await childRefs[newIndex].current?.restoreCard();\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center w-full h-full\">\n      <div className=\"relative w-full max-w-[340px] h-[550px] md:max-w-sm md:h-[600px]\">\n        {db.map((character, index) => (\n          <TinderCard\n            ref={childRefs[index]}\n            className=\"absolute\"\n            key={character.name}\n            onSwipe={(dir) => swiped(dir, character.name, index)}\n            onCardLeftScreen={() => outOfFrame(character.name, index)}\n            preventSwipe={['up', 'down']}\n          >\n            <div className=\"relative w-[340px] h-[550px] md:w-sm md:h-[600px] rounded-2xl overflow-hidden shadow-2xl bg-card\">\n              <Image\n                src={character.image}\n                alt={character.name}\n                fill\n                className=\"object-cover\"\n                data-ai-hint={character.aiHint}\n                priority\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 to-transparent\" />\n              <div className=\"absolute bottom-0 left-0 right-0 p-6 text-white\">\n                <h2 className=\"text-3xl font-bold font-headline\">{character.name}</h2>\n              </div>\n              \n              {/* Swipe indicator */}\n              <div\n                className={cn(\n                  \"absolute top-8 text-5xl font-bold border-4 rounded-xl p-2 px-4 -rotate-20 transition-opacity duration-300 opacity-0\",\n                  \"group-[:nth-of-type(1)_&]:opacity-100\" // This is a trick to show indicator only on top card, might not work depending on how TinderCard renders\n                )}\n                style={{\n                  left: 'var(--swipe-indicator-left)',\n                  transform: 'rotate(var(--swipe-indicator-rotate))',\n                  color: 'var(--swipe-indicator-color)',\n                  borderColor: 'var(--swipe-indicator-color)',\n                  opacity: 'var(--swipe-indicator-opacity, 0)',\n                }}\n              >\n                <span style={{\n                    display: 'var(--swipe-indicator-display-like, none)'\n                }}>BEĞEN</span>\n                 <span style={{\n                    display: 'var(--swipe-indicator-display-nope, none)'\n                }}>GEÇ</span>\n              </div>\n\n            </div>\n          </TinderCard>\n        ))}\n      </div>\n      <div className=\"flex items-center gap-6 mt-6\">\n        <Button\n          onClick={() => swipe('left')}\n          variant=\"outline\"\n          size=\"icon\"\n          className=\"w-16 h-16 rounded-full border-2 border-red-500 text-red-500 hover:bg-red-100 hover:text-red-600\"\n          disabled={!canSwipe}\n        >\n          <X className=\"w-8 h-8\" />\n        </Button>\n        <Button\n          onClick={() => goBack()}\n          variant=\"outline\"\n          size=\"icon\"\n          className=\"w-12 h-12 rounded-full border-2 border-yellow-500 text-yellow-500 hover:bg-yellow-100 hover:text-yellow-600\"\n          disabled={!canGoBack}\n        >\n          <Undo className=\"w-6 h-6\" />\n        </Button>\n        <Button\n          onClick={() => swipe('right')}\n          variant=\"outline\"\n          size=\"icon\"\n          className=\"w-16 h-16 rounded-full border-2 border-green-500 text-green-500 hover:bg-green-100 hover:text-green-600\"\n           disabled={!canSwipe}\n        >\n          <Heart className=\"w-8 h-8\" />\n        </Button>\n      </div>\n      {lastDirection && (\n         <div className=\"mt-4 text-center\">\n            <p className=\"font-bold\">Son Eylem: {lastDirection === 'left' ? 'Geçildi' : 'Beğenildi'}</p>\n          </div>\n      )}\n    </div>\n  );\n}\n\n// Simple on-the-fly style injection for swipe indicators.\n// This is a workaround since TinderCard doesn't directly support this.\n// We'll use CSS variables modified by the component's onSwipe callback.\nconst TinderCardWrapper = ({ children, onSwipe }: { children: React.ReactNode, onSwipe: (dir: string) => void }) => {\n  const handleSwipe = (dir: string) => {\n    // This part is tricky as we need to react to the swipe *during* the drag.\n    // react-tinder-card doesn't expose an onSwipeMove with displacement.\n    // The visual feedback will appear *after* the swipe action is completed.\n    onSwipe(dir);\n  };\n  \n  // A better implementation would require a library that gives us swipe displacement data.\n  // For this demo, the indicator will appear on button click or after swipe is done.\n  // The CSS-in-JS below is a conceptual placeholder. A real implementation would be more complex.\n  return <div>{children}</div>\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}