{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["/**\n * @fileoverview This file initializes and configures the Genkit AI library.\n * It sets up the necessary plugins, in this case, the Google AI plugin for generative models.\n * It exports a configured `ai` object that can be used throughout the application to define\n * and run AI flows, prompts, and tools.\n */\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\nimport {firebase} from \"firebase-admin/lib/firebase-namespace-api\";\nimport App = firebase.app.App;\n\nexport const ai = genkit({\n  plugins: [\n    googleAI({\n      // The Gemini API key is currently read from the `GEMINI_API_KEY`\n      // environment variable.\n    }),\n  ],\n  // Flows are now auto-registered, so we don't need to list them here.\n  // This breaks the circular dependency between this file and the flow files.\n  flows: [],\n});\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACD;AAAA;AACA;AAAA;;;AAIO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QAGT;KACD;IACD,qEAAqE;IACrE,4EAA4E;IAC5E,OAAO,EAAE;AACX","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore, doc, updateDoc, serverTimestamp as firestoreServerTimestamp } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nimport { getDatabase, ref, onValue, set, onDisconnect, serverTimestamp as rtdbServerTimestamp, goOffline, goOnline } from 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst storage = getStorage(app);\nconst rtdb = getDatabase(app);\n\n// Presence management\nconst setupPresence = (userId: string) => {\n    const userStatusDatabaseRef = ref(rtdb, '/status/' + userId);\n    const userFirestoreRef = doc(db, 'users', userId);\n\n    const isOfflineForDatabase = {\n        isOnline: false,\n        lastSeen: rtdbServerTimestamp(),\n    };\n    \n    const isOnlineForDatabase = {\n        isOnline: true,\n    };\n    \n    const isOfflineForFirestore = {\n        isOnline: false,\n        lastSeen: firestoreServerTimestamp(),\n    };\n\n    const isOnlineForFirestore = {\n        isOnline: true,\n    };\n\n    const connectedRef = ref(rtdb, '.info/connected');\n    \n    const listener = onValue(connectedRef, (snap) => {\n        if (snap.val() === false) {\n            updateDoc(userFirestoreRef, isOfflineForFirestore);\n            return;\n        }\n\n        onDisconnect(userStatusDatabaseRef).set(isOfflineForDatabase).then(() => {\n            set(userStatusDatabaseRef, isOnlineForDatabase);\n            updateDoc(userFirestoreRef, isOnlineForFirestore);\n        });\n    });\n\n    const handleVisibilityChange = () => {\n        if (document.visibilityState === 'hidden') {\n            goOffline(rtdb);\n        } else {\n            goOnline(rtdb);\n        }\n    };\n    \n    document.addEventListener('visibilitychange', handleVisibilityChange);\n\n    return () => {\n        document.removeEventListener('visibilitychange', handleVisibilityChange);\n        // Clean up the listener when it's no longer needed\n        // This is a placeholder as onValue returns an unsubscribe function directly\n    };\n};\n\n\nexport { app, auth, db, storage, setupPresence };\n"],"names":[],"mappings":";;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,aAAa,QAAQ,GAAG,CAAC,iCAAiC;IAC1D,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,UAAU,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD,EAAE;AAC3B,MAAM,OAAO,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE;AAEzB,sBAAsB;AACtB,MAAM,gBAAgB,CAAC;IACnB,MAAM,wBAAwB,CAAA,GAAA,qLAAA,CAAA,MAAG,AAAD,EAAE,MAAM,aAAa;IACrD,MAAM,mBAAmB,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,SAAS;IAE1C,MAAM,uBAAuB;QACzB,UAAU;QACV,UAAU,CAAA,GAAA,qLAAA,CAAA,kBAAmB,AAAD;IAChC;IAEA,MAAM,sBAAsB;QACxB,UAAU;IACd;IAEA,MAAM,wBAAwB;QAC1B,UAAU;QACV,UAAU,CAAA,GAAA,iKAAA,CAAA,kBAAwB,AAAD;IACrC;IAEA,MAAM,uBAAuB;QACzB,UAAU;IACd;IAEA,MAAM,eAAe,CAAA,GAAA,qLAAA,CAAA,MAAG,AAAD,EAAE,MAAM;IAE/B,MAAM,WAAW,CAAA,GAAA,qLAAA,CAAA,UAAO,AAAD,EAAE,cAAc,CAAC;QACpC,IAAI,KAAK,GAAG,OAAO,OAAO;YACtB,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,kBAAkB;YAC5B;QACJ;QAEA,CAAA,GAAA,qLAAA,CAAA,eAAY,AAAD,EAAE,uBAAuB,GAAG,CAAC,sBAAsB,IAAI,CAAC;YAC/D,CAAA,GAAA,qLAAA,CAAA,MAAG,AAAD,EAAE,uBAAuB;YAC3B,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,kBAAkB;QAChC;IACJ;IAEA,MAAM,yBAAyB;QAC3B,IAAI,SAAS,eAAe,KAAK,UAAU;YACvC,CAAA,GAAA,qLAAA,CAAA,YAAS,AAAD,EAAE;QACd,OAAO;YACH,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;QACb;IACJ;IAEA,SAAS,gBAAgB,CAAC,oBAAoB;IAE9C,OAAO;QACH,SAAS,mBAAmB,CAAC,oBAAoB;IACjD,mDAAmD;IACnD,4EAA4E;IAChF;AACJ","debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/delete-user-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview A Genkit flow for completely deleting a user and all their associated data.\n *\n * - deleteUser - The main function to trigger user deletion.\n * - DeleteUserInput - The input schema for the deleteUser function.\n * - DeleteUserOutput - The return schema for the deleteUser function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport { getFirestore, collection, query, where, getDocs, writeBatch, doc } from 'firebase/firestore';\nimport { getStorage, ref, deleteObject } from 'firebase/storage';\nimport { getAuth } from 'firebase/auth';\nimport { app } from '@/lib/firebase'; // Assuming 'app' is exported from firebase config\n\nconst DeleteUserInputSchema = z.object({\n  userId: z.string().describe('The UID of the user to be deleted.'),\n});\nexport type DeleteUserInput = z.infer<typeof DeleteUserInputSchema>;\n\nconst DeleteUserOutputSchema = z.object({\n  success: z.boolean(),\n  message: z.string(),\n});\nexport type DeleteUserOutput = z.infer<typeof DeleteUserOutputSchema>;\n\nexport async function deleteUser(input: DeleteUserInput): Promise<DeleteUserOutput> {\n  return deleteUserFlow(input);\n}\n\nconst deleteUserFlow = ai.defineFlow(\n  {\n    name: 'deleteUserFlow',\n    inputSchema: DeleteUserInputSchema,\n    outputSchema: DeleteUserOutputSchema,\n  },\n  async ({ userId }) => {\n    const db = getFirestore(app);\n    const storage = getStorage(app);\n    // Note: Admin Auth is needed to delete users programmatically.\n    // This flow assumes it's run in an environment with necessary permissions.\n\n    try {\n      const batch = writeBatch(db);\n\n      // 1. Delete all posts and associated images from Storage\n      const postsQuery = query(collection(db, 'posts'), where('authorId', '==', userId));\n      const postsSnapshot = await getDocs(postsQuery);\n      for (const postDoc of postsSnapshot.docs) {\n        const postData = postDoc.data();\n        if (postData.type === 'photo' && postData.url) {\n          try {\n            const imageRef = ref(storage, postData.url);\n            await deleteObject(imageRef);\n          } catch (storageError: any) {\n            if (storageError.code !== 'storage/object-not-found') {\n              console.warn(`Could not delete post image ${postData.url}:`, storageError);\n            }\n          }\n        }\n        batch.delete(postDoc.ref);\n      }\n\n      // 2. Delete all conversations involving the user\n      const conversationsQuery = query(collection(db, 'conversations'), where('users', 'array-contains', userId));\n      const conversationsSnapshot = await getDocs(conversationsQuery);\n      for (const convoDoc of conversationsSnapshot.docs) {\n         // Delete all messages in the subcollection\n        const messagesQuery = query(collection(convoDoc.ref, 'messages'));\n        const messagesSnapshot = await getDocs(messagesQuery);\n        messagesSnapshot.forEach(messageDoc => {\n            batch.delete(messageDoc.ref);\n        });\n        // Delete the conversation document itself\n        batch.delete(convoDoc.ref);\n      }\n\n      // 3. Delete user's main document\n      const userDocRef = doc(db, 'users', userId);\n      batch.delete(userDocRef);\n      \n      // ... Add deletion for comments, likes, notifications, followers etc. in a real app\n\n      // Commit all Firestore deletions\n      await batch.commit();\n      \n      // 4. Delete user profile picture from Storage\n      try {\n        const profilePicRef = ref(storage, `profile_pictures/${userId}`);\n        await deleteObject(profilePicRef);\n      } catch (storageError: any) {\n         if (storageError.code !== 'storage/object-not-found') {\n              console.warn(`Could not delete profile picture for ${userId}:`, storageError);\n         }\n      }\n\n      // 5. Delete the user from Firebase Authentication\n      // IMPORTANT: This requires the Firebase Admin SDK to be set up on the server.\n      // Genkit environment doesn't have Admin SDK by default.\n      // This part will fail without proper admin setup.\n      // For this prototype, we'll simulate this and focus on data deletion.\n      console.log(`Simulating deletion of user ${userId} from Firebase Auth.`);\n\n\n      return {\n        success: true,\n        message: `User ${userId} and all associated data have been successfully deleted.`,\n      };\n    } catch (error: any) {\n      console.error('Error deleting user:', error);\n      return {\n        success: false,\n        message: error.message || 'An unknown error occurred during user deletion.',\n      };\n    }\n  }\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/admin/users/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {deleteUser as '40bf163586b9749c4d42659156f8a2a9ed2e915b55'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 504, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/admin/users/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/admin/users/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/admin/users/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","debugId":null}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/admin/users/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/admin/users/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/admin/users/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","debugId":null}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}